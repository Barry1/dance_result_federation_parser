---
name: LintMe
on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]
jobs:
  PyLint:
    name: PyLint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11.0-rc.1"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Install further (poetry) dependencies
        run: |
          python -m pip install poetry
          poetry export --with dev --without-hashes --output requirements.txt
          pip install --upgrade --requirement requirements.txt
      - name: Analysing the code with pylint
        # shellcheck disable=SC2086
        run: pylint --verbose --jobs 0 $(git ls-files *.py|xargs)
  SuperLinter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files
          # within `super-linter`
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter@latest
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: "master"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # $(GITHUB_WORKSPACE) not working as in this action
          LINTER_RULES_PATH: /
          PYTHON_BLACK_CONFIG_FILE: ./pyproject.toml
          PYTHON_ISORT_CONFIG_FILE: ./pyproject.toml
