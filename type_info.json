[
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\_distutils_hack\\__init__.py",
        "line": 82,
        "func_name": "DistutilsMetaFinder.find_spec",
        "type_comments": [
            "(str, None, None) -> None",
            "(str, List[str], None) -> None"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\_virtualenv.py",
        "line": 52,
        "func_name": "_Finder.find_spec",
        "type_comments": [
            "(str, None, None) -> None",
            "(str, List[str], None) -> None"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 25,
        "func_name": "ParquetFile",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 106,
        "func_name": "ParquetFile.__init__",
        "type_comments": [
            "(_io.BufferedReader, bool, builtin_function_or_method, bool, None, None, bool, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 200,
        "func_name": "ParquetFile._parse_header",
        "type_comments": [
            "(_io.BufferedReader, bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 238,
        "func_name": "ParquetFile._set_attrs",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 256,
        "func_name": "columns",
        "type_comments": [
            "() -> List[str]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 267,
        "func_name": "key_value_metadata",
        "type_comments": [
            "() -> Dict[str, str]"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 275,
        "func_name": "partition_meta",
        "type_comments": [
            "() -> Dict"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 283,
        "func_name": "ParquetFile._read_partitions",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 337,
        "func_name": "ParquetFile.row_group_filename",
        "type_comments": [
            "(fastparquet.cencoding.ThriftObject) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 347,
        "func_name": "ParquetFile.read_row_group_file",
        "type_comments": [
            "(fastparquet.cencoding.ThriftObject, List[str], None, List[str], Dict[str, numpy.ndarray], Dict, None, _io.BufferedReader) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 641,
        "func_name": "ParquetFile._get_index",
        "type_comments": [
            "(None) -> List[str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 691,
        "func_name": "ParquetFile.to_pandas",
        "type_comments": [
            "(None, None, None, None, bool, None) -> pandas.core.frame.DataFrame"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 796,
        "func_name": "ParquetFile.pre_allocate",
        "type_comments": [
            "(int, List[str], None, List[str], None) -> Tuple[pandas.core.frame.DataFrame, Dict[str, numpy.ndarray]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 863,
        "func_name": "ParquetFile.check_categories",
        "type_comments": [
            "(None) -> Dict"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 878,
        "func_name": "has_pandas_metadata",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 886,
        "func_name": "pandas_metadata",
        "type_comments": [
            "() -> Dict[str, Union[Dict[str, str], List[Dict[str, Optional[str]]], List[str], str]]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 895,
        "func_name": "categories",
        "type_comments": [
            "() -> Dict"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 941,
        "func_name": "ParquetFile._dtypes",
        "type_comments": [
            "(None) -> collections.OrderedDict"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 1038,
        "func_name": "_pre_allocate",
        "type_comments": [
            "(int, List[str], Dict, List[str], Dict, collections.OrderedDict, Dict, str) -> Tuple[pandas.core.frame.DataFrame, Dict[str, numpy.ndarray]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 1046,
        "func_name": "get_type",
        "type_comments": [
            "(str, bool) -> numpy.dtypes.Int64DType",
            "(str, bool) -> numpy.dtypes.ObjectDType"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\api.py",
        "line": 1064,
        "func_name": "paths_to_cats",
        "type_comments": [
            "(List[str], Dict) -> Tuple[str, Dict]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\compression.py",
        "line": 101,
        "func_name": "decompress_data",
        "type_comments": [
            "(fastparquet.cencoding._memoryviewslice, int, int) -> numpy.ndarray"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\converted_types.py",
        "line": 103,
        "func_name": "typemap",
        "type_comments": [
            "(fastparquet.cencoding.ThriftObject, Dict[str, Dict[str, Optional[str]]]) -> numpy.dtypes.Int64DType",
            "(fastparquet.cencoding.ThriftObject, Dict[str, Dict[str, Optional[str]]]) -> numpy.dtypes.ObjectDType"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\converted_types.py",
        "line": 149,
        "func_name": "convert",
        "type_comments": [
            "(numpy.ndarray, fastparquet.cencoding.ThriftObject, bool, numpy.dtypes.ObjectDType) -> numpy.ndarray",
            "(numpy.ndarray, fastparquet.cencoding.ThriftObject, bool, numpy.dtypes.Int64DType) -> numpy.ndarray"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\core.py",
        "line": 16,
        "func_name": "_read_page",
        "type_comments": [
            "(fastparquet.cencoding.NumpyIO, fastparquet.cencoding.ThriftObject, fastparquet.cencoding.ThriftObject) -> numpy.ndarray"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\core.py",
        "line": 85,
        "func_name": "read_rep",
        "type_comments": [
            "(fastparquet.cencoding.NumpyIO, fastparquet.cencoding.ThriftObject, fastparquet.schema.SchemaHelper, fastparquet.cencoding.ThriftObject, None) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\core.py",
        "line": 105,
        "func_name": "read_data_page",
        "type_comments": [
            "(fastparquet.cencoding.NumpyIO, fastparquet.schema.SchemaHelper, fastparquet.cencoding.ThriftObject, fastparquet.cencoding.ThriftObject, bool, bool) -> Tuple[None, None, numpy.ndarray]"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\core.py",
        "line": 175,
        "func_name": "skip_definition_bytes",
        "type_comments": [
            "(fastparquet.cencoding.NumpyIO, int) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\core.py",
        "line": 430,
        "func_name": "read_col",
        "type_comments": [
            "(fastparquet.cencoding.ThriftObject, fastparquet.schema.SchemaHelper, _io.BufferedReader, bool, bool, numpy.ndarray, None, None) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\core.py",
        "line": 591,
        "func_name": "read_row_group_arrays",
        "type_comments": [
            "(_io.BufferedReader, fastparquet.cencoding.ThriftObject, List[str], Dict, fastparquet.schema.SchemaHelper, Dict, bool, Dict[str, numpy.ndarray], None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\core.py",
        "line": 636,
        "func_name": "read_row_group",
        "type_comments": [
            "(_io.BufferedReader, fastparquet.cencoding.ThriftObject, List[str], Dict, fastparquet.schema.SchemaHelper, Dict, bool, List[str], Dict[str, numpy.ndarray], str, Dict, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\dataframe.py",
        "line": 17,
        "func_name": "Dummy",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\dataframe.py",
        "line": 21,
        "func_name": "empty",
        "type_comments": [
            "(List[numpy.dtypes.ObjectDType], int, Dict, List[str], List[numpy.dtypes.Int64DType], List[str], Dict, str) -> Tuple[pandas.core.frame.DataFrame, Dict[str, numpy.ndarray]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\encoding.py",
        "line": 24,
        "func_name": "read_plain",
        "type_comments": [
            "(fastparquet.cencoding._memoryviewslice, int, int, None, bool, bool) -> numpy.ndarray",
            "(fastparquet.cencoding._memoryviewslice, int, int, int, bool, bool) -> numpy.ndarray"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 10,
        "func_name": "JsonCodecError",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 24,
        "func_name": "OrjsonImpl",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 38,
        "func_name": "UjsonImpl",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 39,
        "func_name": "UjsonImpl.__init__",
        "type_comments": [
            "() -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 56,
        "func_name": "RapidjsonImpl",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 57,
        "func_name": "RapidjsonImpl.__init__",
        "type_comments": [
            "() -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 70,
        "func_name": "JsonImpl",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 71,
        "func_name": "JsonImpl.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 80,
        "func_name": "JsonImpl.loads",
        "type_comments": [
            "(str) -> Dict[str, Union[Dict[str, str], List[Dict[str, Optional[str]]], List[str], str]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 84,
        "func_name": "CodecCache",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 93,
        "func_name": "CodecCache.update",
        "type_comments": [
            "(str, fastparquet.json.JsonImpl) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 98,
        "func_name": "_get_specific_codec",
        "type_comments": [
            "(str) -> fastparquet.json.JsonImpl",
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 111,
        "func_name": "_get_cached_codec",
        "type_comments": [
            "() -> fastparquet.json.JsonImpl"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\json.py",
        "line": 134,
        "func_name": "json_decoder",
        "type_comments": [
            "() -> method"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\parquet_thrift\\parquet\\ttypes.py",
        "line": 1,
        "func_name": "Type",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\parquet_thrift\\parquet\\ttypes.py",
        "line": 41,
        "func_name": "ConvertedType",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\parquet_thrift\\parquet\\ttypes.py",
        "line": 123,
        "func_name": "FieldRepetitionType",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\parquet_thrift\\parquet\\ttypes.py",
        "line": 145,
        "func_name": "Encoding",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\parquet_thrift\\parquet\\ttypes.py",
        "line": 187,
        "func_name": "CompressionCodec",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\parquet_thrift\\parquet\\ttypes.py",
        "line": 230,
        "func_name": "PageType",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\parquet_thrift\\parquet\\ttypes.py",
        "line": 251,
        "func_name": "BoundaryOrder",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\schema.py",
        "line": 7,
        "func_name": "schema_tree",
        "type_comments": [
            "(List[fastparquet.cencoding.ThriftObject], int) -> int"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\schema.py",
        "line": 57,
        "func_name": "flatten",
        "type_comments": [
            "(fastparquet.cencoding.ThriftObject, fastparquet.cencoding.ThriftObject, List) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\schema.py",
        "line": 76,
        "func_name": "SchemaHelper",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\schema.py",
        "line": 79,
        "func_name": "SchemaHelper.__init__",
        "type_comments": [
            "(List[fastparquet.cencoding.ThriftObject]) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\schema.py",
        "line": 113,
        "func_name": "SchemaHelper.schema_element",
        "type_comments": [
            "(List[str]) -> fastparquet.cencoding.ThriftObject"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\schema.py",
        "line": 147,
        "func_name": "SchemaHelper.max_definition_level",
        "type_comments": [
            "(List[str]) -> int"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\schema.py",
        "line": 159,
        "func_name": "_is_list_like",
        "type_comments": [
            "(fastparquet.schema.SchemaHelper, fastparquet.cencoding.ThriftObject) -> bool"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\schema.py",
        "line": 180,
        "func_name": "_is_map_like",
        "type_comments": [
            "(fastparquet.schema.SchemaHelper, fastparquet.cencoding.ThriftObject) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\util.py",
        "line": 26,
        "func_name": "ParquetException",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\util.py",
        "line": 114,
        "func_name": "ensure_str",
        "type_comments": [
            "(bytes, bool) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\util.py",
        "line": 126,
        "func_name": "check_column_names",
        "type_comments": [
            "(List[str], *Optional[List[str]]) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fastparquet\\writer.py",
        "line": 743,
        "func_name": "DataFrameSizeWarning",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\__init__.py",
        "line": 40,
        "func_name": "process_entries",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 40,
        "func_name": "BaseCache",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 108,
        "func_name": "MMapCache",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 194,
        "func_name": "ReadAheadCache",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 240,
        "func_name": "FirstChunkCache",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 286,
        "func_name": "BlockCache",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 423,
        "func_name": "BytesCache",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 524,
        "func_name": "AllBytes",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 548,
        "func_name": "KnownPartsOfAFile",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 649,
        "func_name": "UpdatableLRU",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 656,
        "func_name": "CacheInfo",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 709,
        "func_name": "BackgroundBlockCache",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\caching.py",
        "line": 921,
        "func_name": "register_cache",
        "type_comments": [
            "(bool) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\callbacks.py",
        "line": 4,
        "func_name": "Callback",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\callbacks.py",
        "line": 25,
        "func_name": "Callback.__init__",
        "type_comments": [
            "(None, int, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\callbacks.py",
        "line": 207,
        "func_name": "NoOpCallback",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\callbacks.py",
        "line": 216,
        "func_name": "DotPrinterCallback",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\callbacks.py",
        "line": 237,
        "func_name": "TqdmCallback",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\compression.py",
        "line": 18,
        "func_name": "register_compression",
        "type_comments": [
            "(str, function, str, bool) -> None",
            "(str, abc.ABCMeta, str, bool) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\compression.py",
        "line": 108,
        "func_name": "SnappyFile",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\config.py",
        "line": 14,
        "func_name": "set_conf_env",
        "type_comments": [
            "(Dict, os._Environ) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\config.py",
        "line": 64,
        "func_name": "set_conf_files",
        "type_comments": [
            "(str, Dict) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\config.py",
        "line": 99,
        "func_name": "apply_config",
        "type_comments": [
            "(Dict, None) -> Dict"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\core.py",
        "line": 32,
        "func_name": "OpenFile",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\core.py",
        "line": 158,
        "func_name": "OpenFiles",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\core.py",
        "line": 718,
        "func_name": "PickleableTextIOWrapper",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\dircache.py",
        "line": 6,
        "func_name": "DirCache",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\dircache.py",
        "line": 27,
        "func_name": "DirCache.__init__",
        "type_comments": [
            "(bool, None, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\exceptions.py",
        "line": 8,
        "func_name": "BlocksizeMismatchError",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\exceptions.py",
        "line": 15,
        "func_name": "FSTimeoutError",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\implementations\\local.py",
        "line": 18,
        "func_name": "LocalFileSystem",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\implementations\\local.py",
        "line": 33,
        "func_name": "LocalFileSystem.__init__",
        "type_comments": [
            "(bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\implementations\\local.py",
        "line": 343,
        "func_name": "LocalFileOpener",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\mapping.py",
        "line": 13,
        "func_name": "FSMap",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\registry.py",
        "line": 17,
        "func_name": "register_implementation",
        "type_comments": [
            "(str, fsspec.spec._Cached, bool, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\registry.py",
        "line": 222,
        "func_name": "get_filesystem_class",
        "type_comments": [
            "(str) -> fsspec.spec._Cached"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\registry.py",
        "line": 260,
        "func_name": "_import_class",
        "type_comments": [
            "(str) -> fsspec.spec._Cached"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\registry.py",
        "line": 289,
        "func_name": "filesystem",
        "type_comments": [
            "(str) -> fsspec.implementations.local.LocalFileSystem"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\spec.py",
        "line": 36,
        "func_name": "_Cached",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\spec.py",
        "line": 53,
        "func_name": "__init__",
        "type_comments": [
            "(*Union[Dict[str, Union[Tuple[str, str], bool, str]], Tuple[fsspec.spec._Cached], str]) -> None",
            "(*Union[Dict[str, Union[Dict[str, str], bool, str]], Tuple[], str]) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\spec.py",
        "line": 65,
        "func_name": "__call__",
        "type_comments": [
            "() -> fsspec.implementations.local.LocalFileSystem"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\spec.py",
        "line": 97,
        "func_name": "AbstractFileSystem",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\spec.py",
        "line": 123,
        "func_name": "AbstractFileSystem.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\spec.py",
        "line": 1659,
        "func_name": "AbstractBufferedFile",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\transaction.py",
        "line": 4,
        "func_name": "Transaction",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\transaction.py",
        "line": 52,
        "func_name": "FileActor",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\transaction.py",
        "line": 70,
        "func_name": "DaskTransaction",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\fsspec\\utils.py",
        "line": 306,
        "func_name": "tokenize",
        "type_comments": [
            "(*Union[fsspec.spec._Cached, int]) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\lxml\\html\\__init__.py",
        "line": 710,
        "func_name": "HtmlElementClassLookup.lookup",
        "type_comments": [
            "(str, lxml.etree._Document, None, str) -> type"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\lxml\\html\\__init__.py",
        "line": 903,
        "func_name": "parse",
        "type_comments": [
            "(http.client.HTTPResponse, None, None) -> lxml.etree._ElementTree"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\__init__.py",
        "line": 337,
        "func_name": "__getattr__",
        "type_comments": [
            "(str) -> module"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\_asarray.py",
        "line": 27,
        "func_name": "require",
        "type_comments": [
            "(Tuple[int, int, int], type, str, None) -> numpy.ndarray"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\_dtype.py",
        "line": 24,
        "func_name": "_kind_name",
        "type_comments": [
            "(numpy.dtypes.ObjectDType) -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\_dtype.py",
        "line": 34,
        "func_name": "__str__",
        "type_comments": [
            "(numpy.dtypes.ObjectDType) -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\_dtype.py",
        "line": 336,
        "func_name": "_name_includes_bit_suffix",
        "type_comments": [
            "(numpy.dtypes.ObjectDType) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\_dtype.py",
        "line": 352,
        "func_name": "_name_get",
        "type_comments": [
            "(numpy.dtypes.ObjectDType) -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\_methods.py",
        "line": 58,
        "func_name": "_any",
        "type_comments": [
            "(numpy.ndarray, None, None, None, bool, bool) -> numpy.bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\_methods.py",
        "line": 67,
        "func_name": "_all",
        "type_comments": [
            "(numpy.ndarray, None, None, None, bool, bool) -> numpy.bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\getlimits.py",
        "line": 688,
        "func_name": "iinfo.__init__",
        "type_comments": [
            "(type) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\getlimits.py",
        "line": 699,
        "func_name": "min",
        "type_comments": [
            "() -> int"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\getlimits.py",
        "line": 712,
        "func_name": "max",
        "type_comments": [
            "() -> int"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\multiarray.py",
        "line": 1089,
        "func_name": "copyto",
        "type_comments": [
            "(numpy.ndarray, numpy.ndarray, str, None) -> Tuple[numpy.ndarray, numpy.ndarray, None]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\numeric.py",
        "line": 300,
        "func_name": "full",
        "type_comments": [
            "(int, bool, None, str, None, None) -> numpy.ndarray"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\numerictypes.py",
        "line": 288,
        "func_name": "issubclass_",
        "type_comments": [
            "(type, type) -> bool",
            "(numpy.dtypes.Int64DType, type) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\numpy\\_core\\numerictypes.py",
        "line": 470,
        "func_name": "issubdtype",
        "type_comments": [
            "(numpy.dtypes.Int64DType, type) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\_structures.py",
        "line": 6,
        "func_name": "InfinityType",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\_structures.py",
        "line": 35,
        "func_name": "NegativeInfinityType",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\version.py",
        "line": 38,
        "func_name": "_Version",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\version.py",
        "line": 59,
        "func_name": "InvalidVersion",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\version.py",
        "line": 69,
        "func_name": "_BaseVersion",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\version.py",
        "line": 161,
        "func_name": "Version",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\version.py",
        "line": 188,
        "func_name": "Version.__init__",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\version.py",
        "line": 454,
        "func_name": "_parse_letter_version",
        "type_comments": [
            "(None, None) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\version.py",
        "line": 492,
        "func_name": "_parse_local_version",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\packaging\\version.py",
        "line": 504,
        "func_name": "_cmpkey",
        "type_comments": [
            "(int, Tuple[int, int, int], None, None, None, None) -> Tuple[int, Tuple[int, int, int], packaging._structures.InfinityType, packaging._structures.NegativeInfinityType, packaging._structures.InfinityType, packaging._structures.NegativeInfinityType]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\_config\\__init__.py",
        "line": 34,
        "func_name": "using_copy_on_write",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\_config\\__init__.py",
        "line": 55,
        "func_name": "using_pyarrow_string_dtype",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\_config\\config.py",
        "line": 127,
        "func_name": "_get_single_key",
        "type_comments": [
            "(str, bool) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\_config\\config.py",
        "line": 145,
        "func_name": "_get_option",
        "type_comments": [
            "(str, bool) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\_config\\config.py",
        "line": 617,
        "func_name": "_select_options",
        "type_comments": [
            "(str) -> List[str]"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\_config\\config.py",
        "line": 635,
        "func_name": "_get_root",
        "type_comments": [
            "(str) -> Tuple[Dict[str, Union[bool, str]], str]"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\_config\\config.py",
        "line": 649,
        "func_name": "_get_deprecated_option",
        "type_comments": [
            "(str) -> pandas._config.config.DeprecatedOption"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\_config\\config.py",
        "line": 676,
        "func_name": "_translate_key",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\compat\\_optional.py",
        "line": 74,
        "func_name": "get_version",
        "type_comments": [
            "(module) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\compat\\_optional.py",
        "line": 85,
        "func_name": "import_optional_dependency",
        "type_comments": [
            "(str, str, str, None) -> module"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\compat\\numpy\\function.py",
        "line": 64,
        "func_name": "CompatValidator.__call__",
        "type_comments": [
            "(Tuple[], Dict, str, None, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\algorithms.py",
        "line": 1248,
        "func_name": "searchsorted",
        "type_comments": [
            "(numpy.ndarray, int, str, None) -> numpy.int64"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\arrays\\string_.py",
        "line": 140,
        "func_name": "construct_from_string",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\base.py",
        "line": 363,
        "func_name": "ndim",
        "type_comments": [
            "() -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\base.py",
        "line": 448,
        "func_name": "size",
        "type_comments": [
            "() -> int"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\base.py",
        "line": 836,
        "func_name": "IndexOpsMixin.__iter__",
        "type_comments": [
            "() -> map"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\base.py",
        "line": 1333,
        "func_name": "IndexOpsMixin.searchsorted",
        "type_comments": [
            "(int, str, None) -> numpy.int64"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\common.py",
        "line": 97,
        "func_name": "is_bool_indexer",
        "type_comments": [
            "(numpy.ndarray) -> bool",
            "(pandas.core.series.Series) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\common.py",
        "line": 152,
        "func_name": "cast_scalar_indexer",
        "type_comments": [
            "(int) -> int"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\common.py",
        "line": 301,
        "func_name": "maybe_iterable_to_list",
        "type_comments": [
            "(List[numpy.ndarray]) -> List[numpy.ndarray]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\common.py",
        "line": 372,
        "func_name": "apply_if_callable",
        "type_comments": [
            "(slice, pandas.core.frame.DataFrame) -> slice",
            "(pandas.core.series.Series, pandas.core.series.Series) -> pandas.core.series.Series"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\common.py",
        "line": 568,
        "func_name": "require_length_match",
        "type_comments": [
            "(List[numpy.ndarray], pandas.core.indexes.base.Index) -> None",
            "(numpy.ndarray, pandas.core.indexes.range.RangeIndex) -> None",
            "(numpy.ndarray, pandas.core.indexes.base.Index) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\construction.py",
        "line": 416,
        "func_name": "extract_array",
        "type_comments": [
            "(numpy.ndarray, bool, bool) -> numpy.ndarray",
            "(List[numpy.ndarray], bool, bool) -> List[numpy.ndarray]",
            "(Tuple[str, str, str], bool, bool) -> Tuple[str, str, str]",
            "(List[str], bool, bool) -> List[str]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\construction.py",
        "line": 481,
        "func_name": "ensure_wrapped_if_datetimelike",
        "type_comments": [
            "(numpy.ndarray) -> numpy.ndarray"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\construction.py",
        "line": 517,
        "func_name": "sanitize_array",
        "type_comments": [
            "(numpy.ndarray, pandas.core.indexes.base.Index, None, bool, bool) -> numpy.ndarray",
            "(numpy.ndarray, pandas.core.indexes.range.RangeIndex, None, bool, bool) -> numpy.ndarray",
            "(Tuple[str, str, str], None, None, bool, bool) -> numpy.ndarray",
            "(List[str], None, numpy.dtypes.ObjectDType, bool, bool) -> numpy.ndarray",
            "(List[numpy.ndarray], pandas.core.indexes.base.Index, numpy.dtypes.ObjectDType, bool, bool) -> numpy.ndarray"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\construction.py",
        "line": 688,
        "func_name": "_sanitize_non_ordered",
        "type_comments": [
            "(List[str]) -> None",
            "(List[numpy.ndarray]) -> None",
            "(Tuple[str, str, str]) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\construction.py",
        "line": 696,
        "func_name": "_sanitize_ndim",
        "type_comments": [
            "(numpy.ndarray, numpy.ndarray, None, pandas.core.indexes.base.Index, bool) -> numpy.ndarray",
            "(numpy.ndarray, numpy.ndarray, None, pandas.core.indexes.range.RangeIndex, bool) -> numpy.ndarray",
            "(numpy.ndarray, List[str], None, None, bool) -> numpy.ndarray",
            "(numpy.ndarray, List[str], numpy.dtypes.ObjectDType, None, bool) -> numpy.ndarray",
            "(numpy.ndarray, List[numpy.ndarray], numpy.dtypes.ObjectDType, pandas.core.indexes.base.Index, bool) -> numpy.ndarray"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\construction.py",
        "line": 735,
        "func_name": "_sanitize_str_dtypes",
        "type_comments": [
            "(numpy.ndarray, numpy.ndarray, None, bool) -> numpy.ndarray",
            "(numpy.ndarray, List[str], None, bool) -> numpy.ndarray",
            "(numpy.ndarray, List[str], numpy.dtypes.ObjectDType, bool) -> numpy.ndarray",
            "(numpy.ndarray, List[numpy.ndarray], numpy.dtypes.ObjectDType, bool) -> numpy.ndarray"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\construction.py",
        "line": 758,
        "func_name": "_maybe_repeat",
        "type_comments": [
            "(numpy.ndarray, pandas.core.indexes.base.Index) -> numpy.ndarray",
            "(numpy.ndarray, None) -> numpy.ndarray",
            "(numpy.ndarray, pandas.core.indexes.range.RangeIndex) -> numpy.ndarray"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\construction.py",
        "line": 769,
        "func_name": "_try_cast",
        "type_comments": [
            "(List[numpy.ndarray], numpy.dtypes.ObjectDType, bool) -> numpy.ndarray",
            "(List[str], numpy.dtypes.ObjectDType, bool) -> numpy.ndarray"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\base.py",
        "line": 115,
        "func_name": "ExtensionDtype.__eq__",
        "type_comments": [
            "(pandas.core.arrays.integer.Int32Dtype) -> bool",
            "(pandas.core.arrays.integer.Int64Dtype) -> bool",
            "(pandas.core.arrays.integer.Int16Dtype) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\base.py",
        "line": 144,
        "func_name": "ExtensionDtype.__hash__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\base.py",
        "line": 238,
        "func_name": "construct_from_string",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\base.py",
        "line": 549,
        "func_name": "Registry.find",
        "type_comments": [
            "(str) -> None",
            "(type) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\cast.py",
        "line": 124,
        "func_name": "maybe_convert_platform",
        "type_comments": [
            "(List[str]) -> numpy.ndarray"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\cast.py",
        "line": 1157,
        "func_name": "maybe_infer_to_datetimelike",
        "type_comments": [
            "(numpy.ndarray) -> numpy.ndarray"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\cast.py",
        "line": 1580,
        "func_name": "construct_1d_object_array_from_listlike",
        "type_comments": [
            "(List[numpy.ndarray]) -> numpy.ndarray",
            "(List[str]) -> numpy.ndarray"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 121,
        "func_name": "classes",
        "type_comments": [
            "(*type) -> function"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 126,
        "func_name": "_classes_and_not_datetimelike",
        "type_comments": [
            "(*type) -> function"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 137,
        "func_name": "is_object_dtype",
        "type_comments": [
            "(pandas.core.series.Series) -> bool",
            "(numpy.dtypes.ObjectDType) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 529,
        "func_name": "is_string_or_object_np_dtype",
        "type_comments": [
            "(numpy.dtypes.ObjectDType) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 1040,
        "func_name": "needs_i8_conversion",
        "type_comments": [
            "(numpy.dtypes.Int64DType) -> bool",
            "(numpy.dtypes.ObjectDType) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 1081,
        "func_name": "is_numeric_dtype",
        "type_comments": [
            "(numpy.dtypes.Int64DType) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 1198,
        "func_name": "is_bool_dtype",
        "type_comments": [
            "(numpy.dtypes.BoolDType) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 1270,
        "func_name": "is_1d_only_ea_dtype",
        "type_comments": [
            "(numpy.dtypes.ObjectDType) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 1331,
        "func_name": "is_ea_or_datetimelike_dtype",
        "type_comments": [
            "(None) -> bool",
            "(numpy.dtypes.ObjectDType) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 1399,
        "func_name": "_get_dtype",
        "type_comments": [
            "(numpy.dtypes.BoolDType) -> numpy.dtypes.BoolDType"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 1434,
        "func_name": "_is_dtype_type",
        "type_comments": [
            "(pandas.core.series.Series, function) -> bool",
            "(numpy.dtypes.ObjectDType, function) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 1571,
        "func_name": "validate_all_hashable",
        "type_comments": [
            "(str, *str) -> None",
            "(str, *None) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
        "line": 1596,
        "func_name": "pandas_dtype",
        "type_comments": [
            "(numpy.dtypes.ObjectDType) -> numpy.dtypes.ObjectDType",
            "(numpy.dtypes.BoolDType) -> numpy.dtypes.BoolDType",
            "(type) -> numpy.dtypes.ObjectDType",
            "(str) -> numpy.dtypes.ObjectDType"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\dtypes.py",
        "line": 342,
        "func_name": "construct_from_string",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\dtypes.py",
        "line": 831,
        "func_name": "construct_from_string",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\dtypes.py",
        "line": 1054,
        "func_name": "construct_from_string",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\dtypes.py",
        "line": 1305,
        "func_name": "construct_from_string",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\dtypes.py",
        "line": 1835,
        "func_name": "construct_from_string",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\dtypes.py",
        "line": 2228,
        "func_name": "construct_from_string",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\generic.py",
        "line": 37,
        "func_name": "_check",
        "type_comments": [
            "(List[str]) -> bool",
            "(numpy.ndarray) -> bool",
            "(odict_keys) -> bool"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\generic.py",
        "line": 42,
        "func_name": "_instancecheck",
        "type_comments": [
            "(List[str]) -> bool",
            "(numpy.ndarray) -> bool",
            "(odict_keys) -> bool"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\inference.py",
        "line": 105,
        "func_name": "is_file_like",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\inference.py",
        "line": 195,
        "func_name": "is_array_like",
        "type_comments": [
            "(pandas.core.series.Series) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\inference.py",
        "line": 334,
        "func_name": "is_hashable",
        "type_comments": [
            "(str) -> bool",
            "(type) -> bool",
            "(None) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\missing.py",
        "line": 101,
        "func_name": "isna",
        "type_comments": [
            "(pandas.core.series.Series) -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\missing.py",
        "line": 184,
        "func_name": "_isna",
        "type_comments": [
            "(pandas.core.series.Series, bool) -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\missing.py",
        "line": 261,
        "func_name": "_isna_array",
        "type_comments": [
            "(numpy.ndarray, bool) -> numpy.ndarray"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\missing.py",
        "line": 305,
        "func_name": "_isna_string_dtype",
        "type_comments": [
            "(numpy.ndarray, bool) -> numpy.ndarray"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\missing.py",
        "line": 466,
        "func_name": "array_equivalent",
        "type_comments": [
            "(numpy.ndarray, numpy.ndarray, bool, bool) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\dtypes\\missing.py",
        "line": 564,
        "func_name": "_array_equivalent_object",
        "type_comments": [
            "(numpy.ndarray, numpy.ndarray, bool) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\flags.py",
        "line": 51,
        "func_name": "Flags.__init__",
        "type_comments": [
            "(pandas.core.series.Series, bool) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\flags.py",
        "line": 55,
        "func_name": "allows_duplicate_labels",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\flags.py",
        "line": 87,
        "func_name": "allows_duplicate_labels",
        "type_comments": [
            "(bool) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\frame.py",
        "line": 659,
        "func_name": "DataFrame._constructor_from_mgr",
        "type_comments": [
            "(pandas.core.internals.managers.BlockManager, List[pandas.core.indexes.base.Index]) -> pandas.core.frame.DataFrame"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\frame.py",
        "line": 694,
        "func_name": "DataFrame.__init__",
        "type_comments": [
            "(collections.OrderedDict, None, pandas.core.indexes.base.Index, None, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 278,
        "func_name": "NDFrame.__init__",
        "type_comments": [
            "(pandas.core.internals.managers.SingleBlockManager) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 339,
        "func_name": "_from_mgr",
        "type_comments": [
            "(pandas.core.internals.managers.BlockManager, List[pandas.core.indexes.base.Index]) -> pandas.core.frame.DataFrame",
            "(pandas.core.internals.managers.SingleBlockManager, List[pandas.core.indexes.base.Index]) -> pandas.core.series.Series"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 363,
        "func_name": "attrs",
        "type_comments": [
            "() -> Dict"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 405,
        "func_name": "flags",
        "type_comments": [
            "() -> pandas.core.flags.Flags"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 511,
        "func_name": "_validate_dtype",
        "type_comments": [
            "(numpy.dtypes.ObjectDType) -> numpy.dtypes.ObjectDType",
            "(type) -> numpy.dtypes.ObjectDType"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 572,
        "func_name": "_get_axis_number",
        "type_comments": [
            "(int) -> int",
            "(str) -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 586,
        "func_name": "NDFrame._get_axis",
        "type_comments": [
            "(int) -> pandas.core.indexes.base.Index",
            "(str) -> pandas.core.indexes.base.Index"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 592,
        "func_name": "_get_block_manager_axis",
        "type_comments": [
            "(int) -> int"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 667,
        "func_name": "_info_axis",
        "type_comments": [
            "() -> pandas.core.indexes.base.Index"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 807,
        "func_name": "NDFrame._set_axis",
        "type_comments": [
            "(int, pandas.core.indexes.base.Index) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 1565,
        "func_name": "NDFrame.__invert__",
        "type_comments": [
            "() -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 4361,
        "func_name": "NDFrame._slice",
        "type_comments": [
            "(slice, int) -> pandas.core.frame.DataFrame"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 4379,
        "func_name": "NDFrame._set_is_copy",
        "type_comments": [
            "(pandas.core.frame.DataFrame, bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 5343,
        "func_name": "NDFrame.reindex",
        "type_comments": [
            "(None, pandas.core.indexes.base.Index, None, None, None, bool, None, None, None, None) -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 6236,
        "func_name": "NDFrame.__finalize__",
        "type_comments": [
            "(pandas.core.series.Series, None) -> pandas.core.series.Series",
            "(pandas.core.frame.DataFrame, None) -> pandas.core.frame.DataFrame",
            "(pandas.core.series.Series, str) -> pandas.core.series.Series"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 6284,
        "func_name": "NDFrame.__getattr__",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 6301,
        "func_name": "NDFrame.__setattr__",
        "type_comments": [
            "(str, None) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 6662,
        "func_name": "NDFrame.copy",
        "type_comments": [
            "(bool) -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\generic.py",
        "line": 8693,
        "func_name": "NDFrame.isna",
        "type_comments": [
            "() -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexers\\utils.py",
        "line": 419,
        "func_name": "check_array_indexer",
        "type_comments": [
            "(pandas.core.indexes.base.Index, pandas.core.series.Series) -> numpy.ndarray"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\api.py",
        "line": 386,
        "func_name": "default_index",
        "type_comments": [
            "(int) -> pandas.core.indexes.range.RangeIndex"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 456,
        "func_name": "_engine_type",
        "type_comments": [
            "() -> type"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 475,
        "func_name": "__new__",
        "type_comments": [
            "(Tuple[str, str, str], None, bool, None, bool) -> pandas.core.indexes.base.Index",
            "(numpy.ndarray, None, bool, None, bool) -> pandas.core.indexes.base.Index",
            "(odict_keys, str, bool, None, bool) -> pandas.core.indexes.base.Index"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 591,
        "func_name": "_ensure_array",
        "type_comments": [
            "(numpy.ndarray, numpy.dtypes.Int64DType, bool) -> numpy.ndarray",
            "(numpy.ndarray, numpy.dtypes.ObjectDType, bool) -> numpy.ndarray"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 609,
        "func_name": "_dtype_to_subclass",
        "type_comments": [
            "(numpy.dtypes.Int64DType) -> type",
            "(numpy.dtypes.ObjectDType) -> type"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 649,
        "func_name": "_simple_new",
        "type_comments": [
            "(numpy.ndarray, str, pandas._libs.internals.BlockValuesRefs) -> pandas.core.indexes.base.Index",
            "(numpy.ndarray, None, None) -> pandas.core.indexes.base.Index"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 692,
        "func_name": "_constructor",
        "type_comments": [
            "() -> type"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 791,
        "func_name": "Index.is_",
        "type_comments": [
            "(pandas.core.indexes.base.Index) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 831,
        "func_name": "Index._reset_identity",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 842,
        "func_name": "_engine",
        "type_comments": [
            "() -> pandas._libs.index.ObjectEngine",
            "() -> pandas._libs.index.Int64Engine"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 909,
        "func_name": "Index.__len__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 974,
        "func_name": "dtype",
        "type_comments": [
            "() -> numpy.dtypes.Int64DType",
            "() -> numpy.dtypes.ObjectDType"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 1671,
        "func_name": "name",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 1768,
        "func_name": "Index._set_names",
        "type_comments": [
            "(List[str], None) -> None",
            "(List, None) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 2229,
        "func_name": "is_monotonic_increasing",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 3777,
        "func_name": "Index.get_loc",
        "type_comments": [
            "(int) -> pyannotate_runtime.collect_types.NoReturnType",
            "(int) -> int"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 5144,
        "func_name": "_values",
        "type_comments": [
            "() -> numpy.ndarray"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 5170,
        "func_name": "Index._get_engine_target",
        "type_comments": [
            "() -> numpy.ndarray"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 5323,
        "func_name": "Index.__contains__",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 5373,
        "func_name": "Index.__getitem__",
        "type_comments": [
            "(int) -> str",
            "(numpy.ndarray) -> pandas.core.indexes.base.Index"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 5425,
        "func_name": "Index._getitem_slice",
        "type_comments": [
            "(slice) -> pandas.core.indexes.base.Index"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 5437,
        "func_name": "Index._can_hold_identifiers_and_holds_name",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 5552,
        "func_name": "Index.equals",
        "type_comments": [
            "(pandas.core.indexes.base.Index) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 5651,
        "func_name": "Index.identical",
        "type_comments": [
            "(pandas.core.indexes.base.Index) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 6618,
        "func_name": "Index.slice_indexer",
        "type_comments": [
            "(int, int, None) -> slice"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 6672,
        "func_name": "Index._maybe_cast_indexer",
        "type_comments": [
            "(int) -> int"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 6699,
        "func_name": "Index._maybe_cast_slice_bound",
        "type_comments": [
            "(int, str) -> int"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 6731,
        "func_name": "Index._searchsorted_monotonic",
        "type_comments": [
            "(int, str) -> numpy.int64"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 6745,
        "func_name": "Index.get_slice_bound",
        "type_comments": [
            "(int, str) -> numpy.int64",
            "(int, str) -> int"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 6828,
        "func_name": "Index.slice_locs",
        "type_comments": [
            "(int, int, None) -> Tuple[int, numpy.int64]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 7593,
        "func_name": "ensure_index",
        "type_comments": [
            "(Tuple[str, str, str], bool) -> pandas.core.indexes.base.Index",
            "(pandas.core.indexes.base.Index, bool) -> pandas.core.indexes.base.Index"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
        "line": 7688,
        "func_name": "maybe_extract_name",
        "type_comments": [
            "(None, odict_keys, type) -> None",
            "(None, List[numpy.ndarray], type) -> None",
            "(None, collections.OrderedDict, type) -> None",
            "(None, Tuple[str, str, str], type) -> None",
            "(None, numpy.ndarray, type) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\range.py",
        "line": 201,
        "func_name": "_simple_new",
        "type_comments": [
            "(range, None) -> pandas.core.indexes.range.RangeIndex"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexes\\range.py",
        "line": 999,
        "func_name": "RangeIndex.__len__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexing.py",
        "line": 305,
        "func_name": "loc",
        "type_comments": [
            "() -> pandas.core.indexing._LocIndexer"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexing.py",
        "line": 1165,
        "func_name": "_LocationIndexer._check_deprecated_callable_usage",
        "type_comments": [
            "(slice, slice) -> slice"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexing.py",
        "line": 1176,
        "func_name": "_LocationIndexer.__getitem__",
        "type_comments": [
            "(slice) -> pandas.core.frame.DataFrame"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexing.py",
        "line": 1226,
        "func_name": "_LocIndexer._validate_key",
        "type_comments": [
            "(slice, int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexing.py",
        "line": 1397,
        "func_name": "_LocIndexer._getitem_axis",
        "type_comments": [
            "(slice, int) -> pandas.core.frame.DataFrame"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexing.py",
        "line": 1433,
        "func_name": "_LocIndexer._get_slice_axis",
        "type_comments": [
            "(slice, int) -> pandas.core.frame.DataFrame"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexing.py",
        "line": 2632,
        "func_name": "check_bool_indexer",
        "type_comments": [
            "(pandas.core.indexes.base.Index, pandas.core.series.Series) -> numpy.ndarray"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexing.py",
        "line": 2752,
        "func_name": "need_slice",
        "type_comments": [
            "(slice) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\indexing.py",
        "line": 2765,
        "func_name": "check_dict_or_set_indexers",
        "type_comments": [
            "(pandas.core.series.Series) -> None",
            "(slice) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\base.py",
        "line": 74,
        "func_name": "DataManager.__len__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\base.py",
        "line": 86,
        "func_name": "DataManager._validate_set_axis",
        "type_comments": [
            "(int, pandas.core.indexes.base.Index) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 214,
        "func_name": "is_extension",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 266,
        "func_name": "mgr_locs",
        "type_comments": [
            "() -> pandas._libs.internals.BlockPlacement"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 274,
        "func_name": "Block.make_block",
        "type_comments": [
            "(numpy.ndarray, None, None) -> pandas.core.internals.blocks.NumpyBlock"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 387,
        "func_name": "Block.apply",
        "type_comments": [
            "(builtin_function_or_method) -> List[pandas.core.internals.blocks.NumpyBlock]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 414,
        "func_name": "Block._split_op_result",
        "type_comments": [
            "(numpy.ndarray) -> List[pandas.core.internals.blocks.NumpyBlock]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 718,
        "func_name": "dtype",
        "type_comments": [
            "() -> numpy.dtypes.BoolDType",
            "() -> numpy.dtypes.ObjectDType"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 790,
        "func_name": "Block.copy",
        "type_comments": [
            "(bool) -> pandas.core.internals.blocks.NumpyBlock"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 2645,
        "func_name": "maybe_coerce_values",
        "type_comments": [
            "(numpy.ndarray) -> numpy.ndarray"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 2674,
        "func_name": "get_block_type",
        "type_comments": [
            "(numpy.dtypes.BoolDType) -> type",
            "(numpy.dtypes.ObjectDType) -> type"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 2716,
        "func_name": "new_block",
        "type_comments": [
            "(numpy.ndarray, pandas._libs.internals.BlockPlacement, int, None) -> pandas.core.internals.blocks.NumpyBlock"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
        "line": 2795,
        "func_name": "extend_blocks",
        "type_comments": [
            "(List[pandas.core.internals.blocks.NumpyBlock], List) -> List[pandas.core.internals.blocks.NumpyBlock]",
            "(pandas.core.internals.blocks.NumpyBlock, List) -> List[pandas.core.internals.blocks.NumpyBlock]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\construction.py",
        "line": 96,
        "func_name": "arrays_to_mgr",
        "type_comments": [
            "(List[numpy.ndarray], pandas.core.indexes.base.Index, pandas.core.indexes.range.RangeIndex, None, bool, str, bool) -> pandas.core.internals.managers.BlockManager"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\construction.py",
        "line": 196,
        "func_name": "mgr_to_mgr",
        "type_comments": [
            "(pandas.core.internals.managers.BlockManager, str, bool) -> pandas.core.internals.managers.BlockManager"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\construction.py",
        "line": 423,
        "func_name": "dict_to_mgr",
        "type_comments": [
            "(collections.OrderedDict, None, pandas.core.indexes.base.Index, None, str, bool) -> pandas.core.internals.managers.BlockManager"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\construction.py",
        "line": 596,
        "func_name": "_homogenize",
        "type_comments": [
            "(List[numpy.ndarray], pandas.core.indexes.range.RangeIndex, None) -> Tuple[List[numpy.ndarray], List]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\construction.py",
        "line": 638,
        "func_name": "_extract_index",
        "type_comments": [
            "(pandas.core.series.Series) -> pandas.core.indexes.range.RangeIndex"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 236,
        "func_name": "BaseBlockManager.set_axis",
        "type_comments": [
            "(int, pandas.core.indexes.base.Index) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 246,
        "func_name": "items",
        "type_comments": [
            "() -> pandas.core.indexes.base.Index"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 317,
        "func_name": "BaseBlockManager.apply",
        "type_comments": [
            "(builtin_function_or_method, None) -> pandas.core.internals.managers.SingleBlockManager",
            "(str, None) -> pandas.core.internals.managers.SingleBlockManager"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 557,
        "func_name": "BaseBlockManager.copy",
        "type_comments": [
            "(bool) -> pandas.core.internals.managers.SingleBlockManager"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 913,
        "func_name": "BlockManager.__init__",
        "type_comments": [
            "(List[pandas.core.internals.blocks.NumpyBlock], List[Union[pandas.core.indexes.base.Index, pandas.core.indexes.range.RangeIndex]], bool) -> None",
            "(Tuple[pandas.core.internals.blocks.NumpyBlock], List[pandas.core.indexes.base.Index], bool) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1764,
        "func_name": "BlockManager.is_consolidated",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1772,
        "func_name": "BlockManager._consolidate_check",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1782,
        "func_name": "BlockManager._consolidate_inplace",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1828,
        "func_name": "ndim",
        "type_comments": [
            "() -> int"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1837,
        "func_name": "SingleBlockManager.__init__",
        "type_comments": [
            "(pandas.core.internals.blocks.NumpyBlock, pandas.core.indexes.base.Index, bool) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1850,
        "func_name": "from_blocks",
        "type_comments": [
            "(List[pandas.core.internals.blocks.NumpyBlock], List[pandas.core.indexes.base.Index]) -> pandas.core.internals.managers.SingleBlockManager"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1863,
        "func_name": "from_array",
        "type_comments": [
            "(numpy.ndarray, pandas.core.indexes.base.Index, None) -> pandas.core.internals.managers.SingleBlockManager"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1940,
        "func_name": "_block",
        "type_comments": [
            "() -> pandas.core.internals.blocks.NumpyBlock"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1954,
        "func_name": "SingleBlockManager.get_rows_with_mask",
        "type_comments": [
            "(numpy.ndarray) -> pandas.core.internals.managers.SingleBlockManager"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1989,
        "func_name": "index",
        "type_comments": [
            "() -> pandas.core.indexes.base.Index"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 1993,
        "func_name": "dtype",
        "type_comments": [
            "() -> numpy.dtypes.BoolDType"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 2004,
        "func_name": "SingleBlockManager.internal_values",
        "type_comments": [
            "() -> numpy.ndarray"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 2121,
        "func_name": "create_block_manager_from_column_arrays",
        "type_comments": [
            "(List[numpy.ndarray], List[Union[pandas.core.indexes.base.Index, pandas.core.indexes.range.RangeIndex]], bool, List) -> pandas.core.internals.managers.BlockManager"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 2177,
        "func_name": "_grouping_func",
        "type_comments": [
            "(Tuple[int, numpy.ndarray]) -> Tuple[int, numpy.dtypes.ObjectDType]"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 2190,
        "func_name": "_form_blocks",
        "type_comments": [
            "(List[numpy.ndarray], bool, List) -> List[pandas.core.internals.blocks.NumpyBlock]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\internals\\managers.py",
        "line": 2246,
        "func_name": "_stack_arrays",
        "type_comments": [
            "(List[Tuple[int, numpy.ndarray]], numpy.dtypes.ObjectDType) -> Tuple[numpy.ndarray, Tuple[int, int, int]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\missing.py",
        "line": 1073,
        "func_name": "clean_reindex_fill_method",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\nanops.py",
        "line": 482,
        "func_name": "nanany",
        "type_comments": [
            "(numpy.ndarray, None, bool, None) -> numpy.bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 389,
        "func_name": "Series.__init__",
        "type_comments": [
            "(List[numpy.ndarray], Tuple[str, str, str], numpy.dtypes.ObjectDType, None, None, pandas._libs.lib._NoDefault) -> None",
            "(numpy.ndarray, pandas.core.indexes.base.Index, None, None, bool, pandas._libs.lib._NoDefault) -> None",
            "(collections.OrderedDict, pandas.core.indexes.base.Index, type, None, None, pandas._libs.lib._NoDefault) -> pyannotate_runtime.collect_types.UnknownType"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 607,
        "func_name": "Series._init_dict",
        "type_comments": [
            "(collections.OrderedDict, pandas.core.indexes.base.Index, numpy.dtypes.ObjectDType) -> Tuple[pandas.core.internals.managers.SingleBlockManager, pandas.core.indexes.base.Index]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 660,
        "func_name": "_constructor",
        "type_comments": [
            "() -> type"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 664,
        "func_name": "Series._constructor_from_mgr",
        "type_comments": [
            "(pandas.core.internals.managers.SingleBlockManager, List[pandas.core.indexes.base.Index]) -> pandas.core.series.Series"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 707,
        "func_name": "dtype",
        "type_comments": [
            "() -> numpy.dtypes.BoolDType"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 734,
        "func_name": "name",
        "type_comments": [
            "() -> None",
            "() -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 784,
        "func_name": "name",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 831,
        "func_name": "_values",
        "type_comments": [
            "() -> numpy.ndarray"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 914,
        "func_name": "Series.__len__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 978,
        "func_name": "Series.__array__",
        "type_comments": [
            "(numpy.dtypes.BoolDType, None) -> numpy.ndarray"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 1095,
        "func_name": "Series.__getitem__",
        "type_comments": [
            "(pandas.core.series.Series) -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 1216,
        "func_name": "Series._get_rows_with_mask",
        "type_comments": [
            "(numpy.ndarray) -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 1480,
        "func_name": "Series._clear_item_cache",
        "type_comments": [
            "() -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 5136,
        "func_name": "Series.reindex",
        "type_comments": [
            "(pandas.core.indexes.base.Index, None, None, bool, None, None, None, None) -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 5773,
        "func_name": "Series.isna",
        "type_comments": [
            "() -> pandas.core.series.Series"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 6418,
        "func_name": "Series._reduce",
        "type_comments": [
            "(function, str, int, bool, bool, str) -> numpy.bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\core\\series.py",
        "line": 6459,
        "func_name": "Series.any",
        "type_comments": [
            "(int, bool, bool) -> numpy.bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 131,
        "func_name": "IOHandles.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 160,
        "func_name": "is_url",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 188,
        "func_name": "_expand_user",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 248,
        "func_name": "stringify_path",
        "type_comments": [
            "(str, bool) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 292,
        "func_name": "is_fsspec_url",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 304,
        "func_name": "_get_filepath_or_buffer",
        "type_comments": [
            "(str, str, None, str, None) -> pandas.io.common.IOArgs"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 515,
        "func_name": "get_compression_method",
        "type_comments": [
            "(None) -> Tuple[None, Dict]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 550,
        "func_name": "infer_compression",
        "type_comments": [
            "(str, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 664,
        "func_name": "get_handle",
        "type_comments": [
            "(str, str, None, None, bool, bool, None, None) -> pandas.io.common.IOHandles"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 1117,
        "func_name": "_maybe_memory_map",
        "type_comments": [
            "(str, bool) -> Tuple[str, bool, List]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\common.py",
        "line": 1165,
        "func_name": "_is_binary_mode",
        "type_comments": [
            "(str, str) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\parquet.py",
        "line": 51,
        "func_name": "get_engine",
        "type_comments": [
            "(str) -> pandas.io.parquet.FastParquetImpl"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\parquet.py",
        "line": 297,
        "func_name": "FastParquetImpl.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\parquet.py",
        "line": 358,
        "func_name": "FastParquetImpl.read",
        "type_comments": [
            "(str, None, None, None, None) -> pandas.core.frame.DataFrame"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\io\\parquet.py",
        "line": 498,
        "func_name": "read_parquet",
        "type_comments": [
            "(str, str, None, None, pandas._libs.lib._NoDefault, pandas._libs.lib._NoDefault, None, None) -> pandas.core.frame.DataFrame"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\util\\_validators.py",
        "line": 226,
        "func_name": "validate_bool_kwarg",
        "type_comments": [
            "(bool, str, bool, bool) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\util\\_validators.py",
        "line": 450,
        "func_name": "check_dtype_backend",
        "type_comments": [
            "(pandas._libs.lib._NoDefault) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\util\\version\\__init__.py",
        "line": 149,
        "func_name": "_BaseVersion.__lt__",
        "type_comments": [
            "(pandas.util.version.Version) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\util\\version\\__init__.py",
        "line": 339,
        "func_name": "Version.__init__",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\util\\version\\__init__.py",
        "line": 470,
        "func_name": "_parse_letter_version",
        "type_comments": [
            "(None, None) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\util\\version\\__init__.py",
        "line": 508,
        "func_name": "_parse_local_version",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\pandas\\util\\version\\__init__.py",
        "line": 520,
        "func_name": "_cmpkey",
        "type_comments": [
            "(int, Tuple[int, int, int], None, None, None, None) -> Tuple[int, Tuple[int, int], pandas.util.version.InfinityType, pandas.util.version.NegativeInfinityType, pandas.util.version.InfinityType, pandas.util.version.NegativeInfinityType]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\six.py",
        "line": 194,
        "func_name": "_SixMetaPathImporter.find_spec",
        "type_comments": [
            "(str, None, None) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\typing_extensions.py",
        "line": 2916,
        "func_name": "_check_generic",
        "type_comments": [
            "(Tuple[typing._AnyMeta], int) -> None",
            "(Tuple[type, typing._GenericAlias], int) -> None",
            "(Tuple[type, typing._UnionGenericAlias], int) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\typing_extensions.py",
        "line": 2954,
        "func_name": "_has_generic_or_protocol_as_origin",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\typing_extensions.py",
        "line": 2976,
        "func_name": "_is_unpacked_typevartuple",
        "type_comments": [
            "(typing._GenericAlias) -> bool",
            "(typing._UnionGenericAlias) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\dance-result-federation-parser-7IP40YlE-py3.11\\Lib\\site-packages\\typing_extensions.py",
        "line": 3029,
        "func_name": "_collect_parameters",
        "type_comments": [
            "(Tuple[type, type]) -> Tuple[]",
            "(Tuple[type, typing._UnionGenericAlias]) -> Tuple[]",
            "(Tuple[typing._UnionGenericAlias, type]) -> Tuple[]",
            "(Tuple[type, type, typing._GenericAlias]) -> Tuple[]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 17,
        "func_name": "_IterationGuard.__init__",
        "type_comments": [
            "(_weakrefset.WeakSet) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 21,
        "func_name": "_IterationGuard.__enter__",
        "type_comments": [
            "() -> _weakrefset._IterationGuard"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 27,
        "func_name": "_IterationGuard.__exit__",
        "type_comments": [
            "(None, None, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 37,
        "func_name": "WeakSet.__init__",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 39,
        "func_name": "_remove",
        "type_comments": [
            "(weakref.ReferenceType, weakref.ReferenceType) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 53,
        "func_name": "WeakSet._commit_removals",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 63,
        "func_name": "WeakSet.__iter__",
        "type_comments": [
            "() -> Iterator"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 72,
        "func_name": "WeakSet.__len__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 75,
        "func_name": "WeakSet.__contains__",
        "type_comments": [
            "(socket.socket) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\_weakrefset.py",
        "line": 85,
        "func_name": "WeakSet.add",
        "type_comments": [
            "(_asyncio.Task) -> None",
            "(socket.socket) -> None",
            "(threading.Thread) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ast.py",
        "line": 33,
        "func_name": "parse",
        "type_comments": [
            "(str, str, str, bool, None) -> ast.Module"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 180,
        "func_name": "_run_until_complete_cb",
        "type_comments": [
            "(_asyncio.Task) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 389,
        "func_name": "BaseEventLoop.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 425,
        "func_name": "BaseEventLoop.create_future",
        "type_comments": [
            "() -> _asyncio.Future"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 429,
        "func_name": "BaseEventLoop.create_task",
        "type_comments": [
            "(coroutine, None, _contextvars.Context) -> _asyncio.Task",
            "(coroutine, None, None) -> _asyncio.Task"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 517,
        "func_name": "BaseEventLoop._check_closed",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 521,
        "func_name": "BaseEventLoop._check_default_executor",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 539,
        "func_name": "BaseEventLoop.shutdown_asyncgens",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 564,
        "func_name": "BaseEventLoop.shutdown_default_executor",
        "type_comments": [
            "() -> None",
            "() -> Iterator[_asyncio.Future]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 577,
        "func_name": "BaseEventLoop._do_shutdown",
        "type_comments": [
            "(_asyncio.Future) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 586,
        "func_name": "BaseEventLoop._check_running",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 593,
        "func_name": "BaseEventLoop.run_forever",
        "type_comments": [
            "() -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 617,
        "func_name": "BaseEventLoop.run_until_complete",
        "type_comments": [
            "(_asyncio.Task) -> None",
            "(coroutine) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 655,
        "func_name": "BaseEventLoop.stop",
        "type_comments": [
            "() -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 663,
        "func_name": "BaseEventLoop.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 686,
        "func_name": "BaseEventLoop.is_closed",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 690,
        "func_name": "BaseEventLoop.__del__",
        "type_comments": [
            "(builtin_function_or_method) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 696,
        "func_name": "BaseEventLoop.is_running",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 700,
        "func_name": "BaseEventLoop.time",
        "type_comments": [
            "() -> float"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 751,
        "func_name": "BaseEventLoop.call_soon",
        "type_comments": [
            "(TaskStepMethWrapper, _contextvars.Context) -> asyncio.events.Handle",
            "(method, None) -> asyncio.events.Handle",
            "(function, _contextvars.Context, *_asyncio.Future) -> asyncio.events.Handle",
            "(builtin_function_or_method, _contextvars.Context, *_asyncio.Future) -> asyncio.events.Handle",
            "(method, _contextvars.Context, *asyncio.windows_events._OverlappedFuture) -> asyncio.events.Handle"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 780,
        "func_name": "BaseEventLoop._call_soon",
        "type_comments": [
            "(TaskStepMethWrapper, Tuple[], _contextvars.Context) -> asyncio.events.Handle",
            "(function, Tuple[_asyncio.Future, concurrent.futures._base.Future], None) -> asyncio.events.Handle",
            "(method, Tuple[asyncio.windows_events._OverlappedFuture], _contextvars.Context) -> asyncio.events.Handle",
            "(method, Tuple[], None) -> asyncio.events.Handle",
            "(function, Tuple[_asyncio.Future], _contextvars.Context) -> asyncio.events.Handle"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 804,
        "func_name": "BaseEventLoop.call_soon_threadsafe",
        "type_comments": [
            "(builtin_function_or_method, None, *None) -> asyncio.events.Handle",
            "(function, None, *Union[_asyncio.Future, concurrent.futures._base.Future]) -> asyncio.events.Handle"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 815,
        "func_name": "BaseEventLoop.run_in_executor",
        "type_comments": [
            "(None, functools.partial) -> _asyncio.Future"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 1845,
        "func_name": "BaseEventLoop._run_once",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 1925,
        "func_name": "BaseEventLoop._set_coroutine_origin_tracking",
        "type_comments": [
            "(bool) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 1940,
        "func_name": "BaseEventLoop.get_debug",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_events.py",
        "line": 1943,
        "func_name": "BaseEventLoop.set_debug",
        "type_comments": [
            "(bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_futures.py",
        "line": 14,
        "func_name": "isfuture",
        "type_comments": [
            "(concurrent.futures._base.Future) -> bool",
            "(_asyncio.Future) -> bool",
            "(_asyncio.Task) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_futures.py",
        "line": 45,
        "func_name": "_future_repr_info",
        "type_comments": [
            "(_asyncio.Task) -> List[str]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_tasks.py",
        "line": 9,
        "func_name": "_task_repr_info",
        "type_comments": [
            "(_asyncio.Task) -> List[str]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\base_tasks.py",
        "line": 26,
        "func_name": "_task_repr",
        "type_comments": [
            "(_asyncio.Task) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\coroutines.py",
        "line": 11,
        "func_name": "_is_debug_mode",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\coroutines.py",
        "line": 34,
        "func_name": "iscoroutine",
        "type_comments": [
            "(coroutine) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\coroutines.py",
        "line": 50,
        "func_name": "_format_coroutine",
        "type_comments": [
            "(coroutine) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\coroutines.py",
        "line": 53,
        "func_name": "get_name",
        "type_comments": [
            "(coroutine) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\events.py",
        "line": 31,
        "func_name": "Handle.__init__",
        "type_comments": [
            "(TaskStepMethWrapper, Tuple[], asyncio.windows_events.ProactorEventLoop, _contextvars.Context) -> None",
            "(function, Tuple[_asyncio.Future, concurrent.futures._base.Future], asyncio.windows_events.ProactorEventLoop, None) -> None",
            "(method, Tuple[], asyncio.windows_events.ProactorEventLoop, None) -> None",
            "(method, Tuple[asyncio.windows_events._OverlappedFuture], asyncio.windows_events.ProactorEventLoop, _contextvars.Context) -> None",
            "(function, Tuple[_asyncio.Future], asyncio.windows_events.ProactorEventLoop, _contextvars.Context) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\events.py",
        "line": 78,
        "func_name": "Handle._run",
        "type_comments": [
            "() -> pyannotate_runtime.collect_types.UnknownType"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\events.py",
        "line": 663,
        "func_name": "BaseDefaultEventLoopPolicy.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\events.py",
        "line": 682,
        "func_name": "BaseDefaultEventLoopPolicy.set_event_loop",
        "type_comments": [
            "(asyncio.windows_events.ProactorEventLoop) -> None",
            "(None) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\events.py",
        "line": 689,
        "func_name": "BaseDefaultEventLoopPolicy.new_event_loop",
        "type_comments": [
            "() -> asyncio.windows_events.ProactorEventLoop"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\events.py",
        "line": 750,
        "func_name": "_init_event_loop_policy",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\events.py",
        "line": 758,
        "func_name": "get_event_loop_policy",
        "type_comments": [
            "() -> asyncio.windows_events.WindowsProactorEventLoopPolicy"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\events.py",
        "line": 799,
        "func_name": "set_event_loop",
        "type_comments": [
            "(asyncio.windows_events.ProactorEventLoop) -> None",
            "(None) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\events.py",
        "line": 804,
        "func_name": "new_event_loop",
        "type_comments": [
            "() -> asyncio.windows_events.ProactorEventLoop"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\futures.py",
        "line": 299,
        "func_name": "_get_loop",
        "type_comments": [
            "(_asyncio.Future) -> asyncio.windows_events.ProactorEventLoop",
            "(_asyncio.Task) -> asyncio.windows_events.ProactorEventLoop"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\futures.py",
        "line": 345,
        "func_name": "_copy_future_state",
        "type_comments": [
            "(concurrent.futures._base.Future, _asyncio.Future) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\futures.py",
        "line": 365,
        "func_name": "_chain_future",
        "type_comments": [
            "(concurrent.futures._base.Future, _asyncio.Future) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\futures.py",
        "line": 381,
        "func_name": "_set_state",
        "type_comments": [
            "(_asyncio.Future, concurrent.futures._base.Future) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\futures.py",
        "line": 387,
        "func_name": "_call_check_cancel",
        "type_comments": [
            "(_asyncio.Future) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\futures.py",
        "line": 394,
        "func_name": "_call_set_state",
        "type_comments": [
            "(concurrent.futures._base.Future) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\futures.py",
        "line": 409,
        "func_name": "wrap_future",
        "type_comments": [
            "(concurrent.futures._base.Future, asyncio.windows_events.ProactorEventLoop) -> _asyncio.Future"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\proactor_events.py",
        "line": 631,
        "func_name": "BaseProactorEventLoop.__init__",
        "type_comments": [
            "(asyncio.windows_events.IocpProactor) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\proactor_events.py",
        "line": 684,
        "func_name": "BaseProactorEventLoop.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\proactor_events.py",
        "line": 772,
        "func_name": "BaseProactorEventLoop._close_self_pipe",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\proactor_events.py",
        "line": 782,
        "func_name": "BaseProactorEventLoop._make_self_pipe",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\proactor_events.py",
        "line": 789,
        "func_name": "BaseProactorEventLoop._loop_self_reading",
        "type_comments": [
            "(None) -> None",
            "(asyncio.windows_events._OverlappedFuture) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\proactor_events.py",
        "line": 817,
        "func_name": "BaseProactorEventLoop._write_to_self",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\proactor_events.py",
        "line": 880,
        "func_name": "BaseProactorEventLoop._process_events",
        "type_comments": [
            "(List) -> None",
            "(List[asyncio.windows_events._OverlappedFuture]) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\proactor_events.py",
        "line": 884,
        "func_name": "BaseProactorEventLoop._stop_accept_futures",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\runners.py",
        "line": 49,
        "func_name": "Runner.__init__",
        "type_comments": [
            "(None, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\runners.py",
        "line": 58,
        "func_name": "Runner.__enter__",
        "type_comments": [
            "() -> asyncio.runners.Runner"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\runners.py",
        "line": 62,
        "func_name": "Runner.__exit__",
        "type_comments": [
            "(None, None, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\runners.py",
        "line": 65,
        "func_name": "Runner.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\runners.py",
        "line": 86,
        "func_name": "Runner.run",
        "type_comments": [
            "(coroutine, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\runners.py",
        "line": 131,
        "func_name": "Runner._lazy_init",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\runners.py",
        "line": 160,
        "func_name": "run",
        "type_comments": [
            "(coroutine, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\runners.py",
        "line": 193,
        "func_name": "_cancel_all_tasks",
        "type_comments": [
            "(asyncio.windows_events.ProactorEventLoop) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\tasks.py",
        "line": 42,
        "func_name": "all_tasks",
        "type_comments": [
            "(asyncio.windows_events.ProactorEventLoop) -> Set"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\tasks.py",
        "line": 654,
        "func_name": "ensure_future",
        "type_comments": [
            "(_asyncio.Task, asyncio.windows_events.ProactorEventLoop) -> _asyncio.Task",
            "(coroutine, asyncio.windows_events.ProactorEventLoop) -> _asyncio.Task"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\tasks.py",
        "line": 662,
        "func_name": "_ensure_future",
        "type_comments": [
            "(_asyncio.Task, asyncio.windows_events.ProactorEventLoop) -> _asyncio.Task",
            "(coroutine, asyncio.windows_events.ProactorEventLoop) -> _asyncio.Task"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\threads.py",
        "line": 12,
        "func_name": "to_thread",
        "type_comments": [
            "(function, *http.client.HTTPResponse) -> lxml.etree._ElementTree",
            "(function, *http.client.HTTPResponse) -> Iterator[_asyncio.Future]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 54,
        "func_name": "_OverlappedFuture.__init__",
        "type_comments": [
            "(_overlapped.Overlapped, asyncio.windows_events.ProactorEventLoop) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 67,
        "func_name": "_OverlappedFuture._cancel_overlapped",
        "type_comments": [
            "() -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 83,
        "func_name": "_OverlappedFuture.cancel",
        "type_comments": [
            "(None) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 91,
        "func_name": "_OverlappedFuture.set_result",
        "type_comments": [
            "(bytes) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 312,
        "func_name": "ProactorEventLoop.__init__",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 317,
        "func_name": "ProactorEventLoop.run_forever",
        "type_comments": [
            "() -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 418,
        "func_name": "IocpProactor.__init__",
        "type_comments": [
            "(int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 428,
        "func_name": "IocpProactor._check_closed",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 439,
        "func_name": "IocpProactor.set_loop",
        "type_comments": [
            "(asyncio.windows_events.ProactorEventLoop) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 442,
        "func_name": "IocpProactor.select",
        "type_comments": [
            "(None) -> List[asyncio.windows_events._OverlappedFuture]",
            "(int) -> List"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 458,
        "func_name": "IocpProactor.recv",
        "type_comments": [
            "(socket.socket, int, int) -> asyncio.windows_events._OverlappedFuture"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 469,
        "func_name": "finish_recv",
        "type_comments": [
            "(int, int, _overlapped.Overlapped) -> bytes"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 747,
        "func_name": "IocpProactor._register_with_iocp",
        "type_comments": [
            "(socket.socket) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 757,
        "func_name": "IocpProactor._register",
        "type_comments": [
            "(_overlapped.Overlapped, socket.socket, function) -> asyncio.windows_events._OverlappedFuture"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 789,
        "func_name": "IocpProactor._unregister",
        "type_comments": [
            "(_overlapped.Overlapped) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 804,
        "func_name": "IocpProactor._poll",
        "type_comments": [
            "(int) -> None",
            "(None) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 867,
        "func_name": "IocpProactor.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\asyncio\\windows_events.py",
        "line": 914,
        "func_name": "IocpProactor.__del__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\collections\\__init__.py",
        "line": 350,
        "func_name": "namedtuple",
        "type_comments": [
            "(str, str, bool, None, None) -> type",
            "(str, List[str], bool, List, str) -> type"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\collections\\__init__.py",
        "line": 442,
        "func_name": "_make",
        "type_comments": [
            "(map) -> importlib.metadata._collections.Pair"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\collections\\__init__.py",
        "line": 452,
        "func_name": "Pair._replace",
        "type_comments": [
            "() -> importlib.metadata._collections.Pair"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\__init__.py",
        "line": 40,
        "func_name": "__getattr__",
        "type_comments": [
            "(str) -> type"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\_base.py",
        "line": 328,
        "func_name": "Future.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\_base.py",
        "line": 337,
        "func_name": "Future._invoke_callbacks",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\_base.py",
        "line": 383,
        "func_name": "Future.cancelled",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\_base.py",
        "line": 398,
        "func_name": "__get_result",
        "type_comments": [
            "() -> lxml.etree._ElementTree"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\_base.py",
        "line": 408,
        "func_name": "Future.add_done_callback",
        "type_comments": [
            "(function) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\_base.py",
        "line": 463,
        "func_name": "Future.exception",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\_base.py",
        "line": 497,
        "func_name": "Future.set_running_or_notify_cancel",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\_base.py",
        "line": 537,
        "func_name": "Future.set_result",
        "type_comments": [
            "(lxml.etree._ElementTree) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 46,
        "func_name": "_WorkItem",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 47,
        "func_name": "_WorkItem.__init__",
        "type_comments": [
            "(concurrent.futures._base.Future, functools.partial, Tuple[], Dict) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 53,
        "func_name": "_WorkItem.run",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 69,
        "func_name": "_worker",
        "type_comments": [
            "(weakref.ReferenceType, _queue.SimpleQueue, None, Tuple[]) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 112,
        "func_name": "BrokenThreadPool",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 118,
        "func_name": "ThreadPoolExecutor",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 123,
        "func_name": "ThreadPoolExecutor.__init__",
        "type_comments": [
            "(None, str, None, Tuple[]) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 161,
        "func_name": "ThreadPoolExecutor.submit",
        "type_comments": [
            "(functools.partial) -> concurrent.futures._base.Future"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 180,
        "func_name": "ThreadPoolExecutor._adjust_thread_count",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\concurrent\\futures\\thread.py",
        "line": 216,
        "func_name": "ThreadPoolExecutor.shutdown",
        "type_comments": [
            "(bool, bool) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\contextlib.py",
        "line": 260,
        "func_name": "contextmanager",
        "type_comments": [
            "(function) -> function"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\contextlib.py",
        "line": 428,
        "func_name": "suppress.__init__",
        "type_comments": [
            "(*type) -> None"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\contextlib.py",
        "line": 431,
        "func_name": "suppress.__enter__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\contextlib.py",
        "line": 434,
        "func_name": "suppress.__exit__",
        "type_comments": [
            "(type, FileNotFoundError, traceback) -> bool",
            "(None, None, None) -> bool"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 228,
        "func_name": "_recursive_repr",
        "type_comments": [
            "(function) -> function"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 287,
        "func_name": "Field.__init__",
        "type_comments": [
            "(None, dataclasses._MISSING_TYPE, bool, bool, None, bool, None, dataclasses._MISSING_TYPE) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 346,
        "func_name": "_DataclassParams.__init__",
        "type_comments": [
            "(bool, bool, bool, bool, bool, bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 368,
        "func_name": "field",
        "type_comments": [
            "(None, dataclasses._MISSING_TYPE, bool, bool, None, bool, None, dataclasses._MISSING_TYPE) -> dataclasses.Field"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 392,
        "func_name": "_fields_in_init_order",
        "type_comments": [
            "(List[dataclasses.Field]) -> Tuple[Tuple[dataclasses.Field, dataclasses.Field], Tuple[]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 401,
        "func_name": "_tuple_str",
        "type_comments": [
            "(str, List[dataclasses.Field]) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 413,
        "func_name": "_create_fn",
        "type_comments": [
            "(str, Tuple[str], List[str], Dict[str, Optional[Union[_frozen_importlib.ModuleSpec, _frozen_importlib_external.SourceFileLoader, str]]], None, dataclasses._MISSING_TYPE) -> function",
            "(str, List[str], List[str], Dict[str, Optional[Union[_frozen_importlib.ModuleSpec, _frozen_importlib_external.SourceFileLoader, str]]], Dict[str, Union[dataclasses._HAS_DEFAULT_FACTORY_CLASS, dataclasses._MISSING_TYPE, type, typing._UnionGenericAlias]], None) -> function",
            "(str, Tuple[str, str], List[str], Dict[str, Optional[Union[_frozen_importlib.ModuleSpec, _frozen_importlib_external.SourceFileLoader, str]]], None, dataclasses._MISSING_TYPE) -> function"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 437,
        "func_name": "_field_assign",
        "type_comments": [
            "(bool, str, str, str) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 449,
        "func_name": "_field_init",
        "type_comments": [
            "(dataclasses.Field, bool, Dict[str, Union[dataclasses._HAS_DEFAULT_FACTORY_CLASS, dataclasses._MISSING_TYPE, type, typing._UnionGenericAlias]], str, bool) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 509,
        "func_name": "_init_param",
        "type_comments": [
            "(dataclasses.Field) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 528,
        "func_name": "_init_fn",
        "type_comments": [
            "(List[dataclasses.Field], Tuple[dataclasses.Field, dataclasses.Field], Tuple[], bool, bool, str, Dict[str, Optional[Union[_frozen_importlib.ModuleSpec, _frozen_importlib_external.SourceFileLoader, str]]], bool) -> function"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 588,
        "func_name": "_repr_fn",
        "type_comments": [
            "(List[dataclasses.Field], Dict[str, Optional[Union[_frozen_importlib.ModuleSpec, _frozen_importlib_external.SourceFileLoader, str]]]) -> function"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 624,
        "func_name": "_cmp_fn",
        "type_comments": [
            "(str, str, str, str, Dict[str, Optional[Union[_frozen_importlib.ModuleSpec, _frozen_importlib_external.SourceFileLoader, str]]]) -> function"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 646,
        "func_name": "_is_classvar",
        "type_comments": [
            "(typing._UnionGenericAlias, module) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 654,
        "func_name": "_is_initvar",
        "type_comments": [
            "(typing._UnionGenericAlias, module) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 660,
        "func_name": "_is_kw_only",
        "type_comments": [
            "(typing._UnionGenericAlias, module) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 723,
        "func_name": "_get_field",
        "type_comments": [
            "(str, typing._UnionGenericAlias, bool) -> dataclasses.Field"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 820,
        "func_name": "_set_qualname",
        "type_comments": [
            "(function) -> function",
            "(Tuple[str, str]) -> Tuple[str, str]"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 827,
        "func_name": "_set_new_attribute",
        "type_comments": [
            "(str, Tuple[str, str]) -> bool",
            "(str, function) -> bool"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 842,
        "func_name": "_hash_set_none",
        "type_comments": [
            "(List[dataclasses.Field], Dict[str, Optional[Union[_frozen_importlib.ModuleSpec, _frozen_importlib_external.SourceFileLoader, str]]]) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 884,
        "func_name": "_process_class",
        "type_comments": [
            "(bool, bool, bool, bool, bool, bool, bool, bool, bool, bool) -> type"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 1202,
        "func_name": "dataclass",
        "type_comments": [
            "(bool, bool, bool, bool, bool, bool, bool, bool, bool, bool) -> type"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\dataclasses.py",
        "line": 1219,
        "func_name": "wrap",
        "type_comments": [
            "() -> type"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\_policybase.py",
        "line": 281,
        "func_name": "Compat32._sanitize_header",
        "type_comments": [
            "(str, str) -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\_policybase.py",
        "line": 293,
        "func_name": "Compat32.header_source_parse",
        "type_comments": [
            "(List[str]) -> Tuple[str, str]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\_policybase.py",
        "line": 311,
        "func_name": "Compat32.header_fetch_parse",
        "type_comments": [
            "(str, str) -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 52,
        "func_name": "BufferedSubFile.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 69,
        "func_name": "BufferedSubFile.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 77,
        "func_name": "BufferedSubFile.readline",
        "type_comments": [
            "() -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 100,
        "func_name": "BufferedSubFile.push",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 121,
        "func_name": "BufferedSubFile.pushlines",
        "type_comments": [
            "(List[str]) -> None",
            "(List) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 124,
        "func_name": "BufferedSubFile.__iter__",
        "type_comments": [
            "() -> email.feedparser.BufferedSubFile"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 127,
        "func_name": "BufferedSubFile.__next__",
        "type_comments": [
            "() -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 137,
        "func_name": "FeedParser.__init__",
        "type_comments": [
            "(type, email._policybase.Compat32) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 171,
        "func_name": "FeedParser.feed",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 176,
        "func_name": "FeedParser._call_parse",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 182,
        "func_name": "FeedParser.close",
        "type_comments": [
            "() -> http.client.HTTPMessage"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 195,
        "func_name": "FeedParser._new_message",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 208,
        "func_name": "FeedParser._pop_message",
        "type_comments": [
            "() -> http.client.HTTPMessage"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 216,
        "func_name": "FeedParser._parsegen",
        "type_comments": [
            "() -> Iterator",
            "() -> Iterator[object]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\feedparser.py",
        "line": 469,
        "func_name": "FeedParser._parse_headers",
        "type_comments": [
            "(List[str]) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\message.py",
        "line": 29,
        "func_name": "_splitparam",
        "type_comments": [
            "(str) -> Tuple[str, str]"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\message.py",
        "line": 150,
        "func_name": "Message.__init__",
        "type_comments": [
            "(email._policybase.Compat32) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\message.py",
        "line": 330,
        "func_name": "Message.set_payload",
        "type_comments": [
            "(str, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\message.py",
        "line": 489,
        "func_name": "Message.get",
        "type_comments": [
            "(str, object) -> str",
            "(str, None) -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\message.py",
        "line": 506,
        "func_name": "Message.set_raw",
        "type_comments": [
            "(str, str) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\message.py",
        "line": 591,
        "func_name": "Message.get_content_type",
        "type_comments": [
            "() -> str"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\message.py",
        "line": 615,
        "func_name": "Message.get_content_maintype",
        "type_comments": [
            "() -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\parser.py",
        "line": 17,
        "func_name": "Parser.__init__",
        "type_comments": [
            "(type, email._policybase.Compat32) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\parser.py",
        "line": 41,
        "func_name": "Parser.parse",
        "type_comments": [
            "(_io.StringIO, bool) -> http.client.HTTPMessage"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\parser.py",
        "line": 59,
        "func_name": "Parser.parsestr",
        "type_comments": [
            "(str, bool) -> http.client.HTTPMessage"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\email\\utils.py",
        "line": 51,
        "func_name": "_has_surrogates",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\encodings\\__init__.py",
        "line": 43,
        "func_name": "normalize_encoding",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\encodings\\__init__.py",
        "line": 71,
        "func_name": "search_function",
        "type_comments": [
            "(str) -> codecs.CodecInfo"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\encodings\\cp1252.py",
        "line": 18,
        "func_name": "IncrementalEncoder.encode",
        "type_comments": [
            "(str, bool) -> bytes"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\encodings\\idna.py",
        "line": 145,
        "func_name": "Codec.encode",
        "type_comments": [
            "(str, str) -> Tuple[bytes, int]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\encodings\\idna.py",
        "line": 298,
        "func_name": "getregentry",
        "type_comments": [
            "() -> codecs.CodecInfo"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\enum.py",
        "line": 193,
        "func_name": "property.__get__",
        "type_comments": [
            "(re.RegexFlag, enum.EnumType) -> int"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\enum.py",
        "line": 686,
        "func_name": "__call__",
        "type_comments": [
            "(int, None, None, None, None, int, None) -> re.RegexFlag"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\enum.py",
        "line": 1093,
        "func_name": "__new__",
        "type_comments": [
            "(int) -> re.RegexFlag"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\enum.py",
        "line": 1187,
        "func_name": "_missing_",
        "type_comments": [
            "(builtin_function_or_method) -> None",
            "(functools.partial) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\enum.py",
        "line": 1256,
        "func_name": "value",
        "type_comments": [
            "() -> int"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\enum.py",
        "line": 1506,
        "func_name": "RegexFlag.__or__",
        "type_comments": [
            "(re.RegexFlag) -> re.RegexFlag"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\enum.py",
        "line": 1516,
        "func_name": "RegexFlag.__and__",
        "type_comments": [
            "(int) -> re.RegexFlag"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\functools.py",
        "line": 35,
        "func_name": "update_wrapper",
        "type_comments": [
            "(function, function, Tuple[str, str, str, str, str], Tuple[str]) -> function",
            "(functools._lru_cache_wrapper, method, Tuple[str, str, str, str, str], Tuple[str]) -> functools._lru_cache_wrapper",
            "(functools._lru_cache_wrapper, function, Tuple[str, str, str, str, str], Tuple[str]) -> functools._lru_cache_wrapper"
        ],
        "samples": 8
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\functools.py",
        "line": 65,
        "func_name": "wraps",
        "type_comments": [
            "(function, Tuple[str, str, str, str, str], Tuple[str]) -> functools.partial"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\functools.py",
        "line": 479,
        "func_name": "lru_cache",
        "type_comments": [
            "(int, bool) -> function"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\functools.py",
        "line": 518,
        "func_name": "decorating_function",
        "type_comments": [
            "(method) -> functools._lru_cache_wrapper"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\functools.py",
        "line": 966,
        "func_name": "cached_property.__init__",
        "type_comments": [
            "(function) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\functools.py",
        "line": 972,
        "func_name": "cached_property.__set_name__",
        "type_comments": [
            "(abc.ABCMeta, str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 206,
        "func_name": "_read_headers",
        "type_comments": [
            "(_io.BufferedReader) -> List[bytes]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 224,
        "func_name": "parse_headers",
        "type_comments": [
            "(_io.BufferedReader, type) -> http.client.HTTPMessage"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 248,
        "func_name": "HTTPResponse.__init__",
        "type_comments": [
            "(ssl.SSLSocket, int, str, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 278,
        "func_name": "HTTPResponse._read_status",
        "type_comments": [
            "() -> Tuple[str, int, str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 311,
        "func_name": "HTTPResponse.begin",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 383,
        "func_name": "HTTPResponse._check_close",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 412,
        "func_name": "HTTPResponse._close_conn",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 417,
        "func_name": "HTTPResponse.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 429,
        "func_name": "HTTPResponse.flush",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 450,
        "func_name": "HTTPResponse.read",
        "type_comments": [
            "(int) -> bytes"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 524,
        "func_name": "HTTPResponse._read_next_chunk_size",
        "type_comments": [
            "() -> int"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 540,
        "func_name": "HTTPResponse._read_and_discard_trailer",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 554,
        "func_name": "HTTPResponse._get_chunk_left",
        "type_comments": [
            "() -> int"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 578,
        "func_name": "HTTPResponse._read_chunked",
        "type_comments": [
            "(int) -> bytes"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 624,
        "func_name": "HTTPResponse._safe_read",
        "type_comments": [
            "(int) -> bytes"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 748,
        "func_name": "HTTPResponse.info",
        "type_comments": [
            "() -> http.client.HTTPMessage"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 771,
        "func_name": "HTTPResponse.geturl",
        "type_comments": [
            "() -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 806,
        "func_name": "_get_content_length",
        "type_comments": [
            "(None, str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 838,
        "func_name": "HTTPConnection.__init__",
        "type_comments": [
            "(str, None, object, None, int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 884,
        "func_name": "HTTPConnection._get_hostport",
        "type_comments": [
            "(str, None) -> Tuple[str, int]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 904,
        "func_name": "HTTPConnection.set_debuglevel",
        "type_comments": [
            "(int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 942,
        "func_name": "HTTPConnection.connect",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 957,
        "func_name": "HTTPConnection.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 971,
        "func_name": "HTTPConnection.send",
        "type_comments": [
            "(bytes) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1011,
        "func_name": "HTTPConnection._output",
        "type_comments": [
            "(bytes) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1032,
        "func_name": "HTTPConnection._send_output",
        "type_comments": [
            "(None, bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1086,
        "func_name": "HTTPConnection.putrequest",
        "type_comments": [
            "(str, str, int, bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1213,
        "func_name": "HTTPConnection._encode_request",
        "type_comments": [
            "(str) -> bytes"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1217,
        "func_name": "HTTPConnection._validate_method",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1226,
        "func_name": "HTTPConnection._validate_path",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1234,
        "func_name": "HTTPConnection._validate_host",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1242,
        "func_name": "HTTPConnection.putheader",
        "type_comments": [
            "(str, *str) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1270,
        "func_name": "HTTPConnection.endheaders",
        "type_comments": [
            "(None, bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1283,
        "func_name": "HTTPConnection.request",
        "type_comments": [
            "(str, str, None, Dict[str, str], bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1288,
        "func_name": "HTTPConnection._send_request",
        "type_comments": [
            "(str, str, None, Dict[str, str], bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1334,
        "func_name": "HTTPConnection.getresponse",
        "type_comments": [
            "() -> http.client.HTTPResponse"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1409,
        "func_name": "HTTPSConnection.__init__",
        "type_comments": [
            "(str, None, None, None, object, None, None, None, int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\http\\client.py",
        "line": 1448,
        "func_name": "HTTPSConnection.connect",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\__init__.py",
        "line": 108,
        "func_name": "import_module",
        "type_comments": [
            "(str, None) -> module"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\abc.py",
        "line": 32,
        "func_name": "_register",
        "type_comments": [
            "(abc.ABCMeta, *type) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\abc.py",
        "line": 43,
        "func_name": "Finder",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\abc.py",
        "line": 112,
        "func_name": "PathEntryFinder",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\abc.py",
        "line": 161,
        "func_name": "ResourceLoader",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\abc.py",
        "line": 177,
        "func_name": "InspectLoader",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\abc.py",
        "line": 230,
        "func_name": "ExecutionLoader",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\abc.py",
        "line": 267,
        "func_name": "FileLoader",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\abc.py",
        "line": 276,
        "func_name": "SourceLoader",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 46,
        "func_name": "PackageNotFoundError",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 58,
        "func_name": "Sectioned",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 99,
        "func_name": "section_pairs",
        "type_comments": [
            "(str) -> generator"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 107,
        "func_name": "read",
        "type_comments": [
            "(str, function) -> Iterator[importlib.metadata._collections.Pair]",
            "(str, function) -> Iterator"
        ],
        "samples": 10
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 118,
        "func_name": "valid",
        "type_comments": [
            "(str) -> str",
            "(str) -> bool"
        ],
        "samples": 9
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 123,
        "func_name": "DeprecatedTuple",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 149,
        "func_name": "EntryPoint",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 193,
        "func_name": "EntryPoint.__init__",
        "type_comments": [
            "(str, str, str) -> None"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 221,
        "func_name": "EntryPoint._for",
        "type_comments": [
            "(importlib.metadata.PathDistribution) -> importlib.metadata.EntryPoint"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 236,
        "func_name": "EntryPoint.matches",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 281,
        "func_name": "DeprecatedList",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 322,
        "func_name": "_wrap_deprecated_method",
        "type_comments": [
            "(str) -> Tuple[str, function]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 351,
        "func_name": "EntryPoints",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 375,
        "func_name": "EntryPoints.select",
        "type_comments": [
            "() -> importlib.metadata.EntryPoints"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 400,
        "func_name": "_from_text_for",
        "type_comments": [
            "(None, importlib.metadata.PathDistribution) -> importlib.metadata.EntryPoints",
            "(str, importlib.metadata.PathDistribution) -> importlib.metadata.EntryPoints"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 404,
        "func_name": "_from_text",
        "type_comments": [
            "(str) -> generator",
            "(None) -> generator"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 412,
        "func_name": "Deprecated",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 467,
        "func_name": "SelectableGroups",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 473,
        "func_name": "load",
        "type_comments": [
            "(itertools.chain) -> importlib.metadata.SelectableGroups"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 480,
        "func_name": "_all",
        "type_comments": [
            "() -> importlib.metadata.EntryPoints"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 501,
        "func_name": "SelectableGroups.select",
        "type_comments": [
            "() -> importlib.metadata.SelectableGroups",
            "() -> importlib.metadata.EntryPoints"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 507,
        "func_name": "PackagePath",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 523,
        "func_name": "FileHash",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 531,
        "func_name": "Distribution",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 567,
        "func_name": "discover",
        "type_comments": [
            "() -> itertools.chain"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 594,
        "func_name": "_discover_resolvers",
        "type_comments": [
            "() -> filter"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 634,
        "func_name": "entry_points",
        "type_comments": [
            "() -> importlib.metadata.EntryPoints"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 731,
        "func_name": "DistributionFinder",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 736,
        "func_name": "Context",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 754,
        "func_name": "Context.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 757,
        "func_name": "path",
        "type_comments": [
            "() -> List[str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 779,
        "func_name": "FastPath",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 788,
        "func_name": "__new__",
        "type_comments": [
            "(str) -> importlib.metadata.FastPath"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 792,
        "func_name": "FastPath.__init__",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 795,
        "func_name": "FastPath.joinpath",
        "type_comments": [
            "(str) -> pathlib.WindowsPath"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 798,
        "func_name": "FastPath.children",
        "type_comments": [
            "() -> List",
            "() -> List[str]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 805,
        "func_name": "FastPath.zip_children",
        "type_comments": [
            "() -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 812,
        "func_name": "FastPath.search",
        "type_comments": [
            "(importlib.metadata.Prepared) -> itertools.chain"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 815,
        "func_name": "mtime",
        "type_comments": [
            "() -> None",
            "() -> float"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 821,
        "func_name": "lookup",
        "type_comments": [
            "(float) -> importlib.metadata.Lookup",
            "(None) -> importlib.metadata.Lookup"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 826,
        "func_name": "Lookup",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 827,
        "func_name": "Lookup.__init__",
        "type_comments": [
            "(importlib.metadata.FastPath) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 848,
        "func_name": "Lookup.search",
        "type_comments": [
            "(importlib.metadata.Prepared) -> itertools.chain"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 862,
        "func_name": "Prepared",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 870,
        "func_name": "Prepared.__init__",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 877,
        "func_name": "normalize",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 10
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 892,
        "func_name": "Prepared.__bool__",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 896,
        "func_name": "MetadataPathFinder",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 897,
        "func_name": "find_distributions",
        "type_comments": [
            "(importlib.metadata:DistributionFinder.Context) -> map"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 910,
        "func_name": "_search_paths",
        "type_comments": [
            "(None, List[str]) -> itertools.chain"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 922,
        "func_name": "PathDistribution",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 923,
        "func_name": "PathDistribution.__init__",
        "type_comments": [
            "(pathlib.WindowsPath) -> None"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 930,
        "func_name": "PathDistribution.read_text",
        "type_comments": [
            "(str) -> str",
            "(str) -> None"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 945,
        "func_name": "_normalized_name",
        "type_comments": [
            "() -> str"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 957,
        "func_name": "_name_from_stem",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 984,
        "func_name": "distributions",
        "type_comments": [
            "() -> itertools.chain"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\__init__.py",
        "line": 1020,
        "func_name": "entry_points",
        "type_comments": [
            "() -> importlib.metadata.SelectableGroups"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_adapters.py",
        "line": 8,
        "func_name": "Message",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_collections.py",
        "line": 5,
        "func_name": "FreezableDefaultDict",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_collections.py",
        "line": 23,
        "func_name": "FreezableDefaultDict.freeze",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_collections.py",
        "line": 27,
        "func_name": "Pair",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_collections.py",
        "line": 28,
        "func_name": "parse",
        "type_comments": [
            "(str) -> importlib.metadata._collections.Pair"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_functools.py",
        "line": 6,
        "func_name": "method_cache",
        "type_comments": [
            "(function, None) -> function"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_functools.py",
        "line": 75,
        "func_name": "wrapper",
        "type_comments": [
            "() -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_functools.py",
        "line": 89,
        "func_name": "pass_none",
        "type_comments": [
            "(function) -> function"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_functools.py",
        "line": 99,
        "func_name": "wrapper",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_itertools.py",
        "line": 4,
        "func_name": "unique_everseen",
        "type_comments": [
            "(itertools.chain, operator.attrgetter) -> Iterator[importlib.metadata.PathDistribution]"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_meta.py",
        "line": 7,
        "func_name": "PackageMetadata",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_meta.py",
        "line": 32,
        "func_name": "SimplePath",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_text.py",
        "line": 7,
        "func_name": "FoldedCase",
        "type_comments": [
            "() -> cell"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_text.py",
        "line": 79,
        "func_name": "FoldedCase.__hash__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\importlib\\metadata\\_text.py",
        "line": 90,
        "func_name": "lower",
        "type_comments": [
            "() -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 167,
        "func_name": "get_annotations",
        "type_comments": [
            "(function, None, None, bool) -> Dict[str, Optional[typing._UnionGenericAlias]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 292,
        "func_name": "isclass",
        "type_comments": [
            "(type) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 310,
        "func_name": "ismethoddescriptor",
        "type_comments": [
            "(type) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 378,
        "func_name": "isfunction",
        "type_comments": [
            "(function) -> bool",
            "(type) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 505,
        "func_name": "isbuiltin",
        "type_comments": [
            "(type) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 735,
        "func_name": "unwrap",
        "type_comments": [
            "(function, function) -> function",
            "(type, function) -> type"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 755,
        "func_name": "_is_wrapper",
        "type_comments": [
            "(function) -> bool",
            "(type) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 1441,
        "func_name": "formatannotation",
        "type_comments": [
            "(typing._UnionGenericAlias, None) -> str",
            "(None, None) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 1443,
        "func_name": "repl",
        "type_comments": [
            "(re.Match) -> str"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 1947,
        "func_name": "_signature_get_user_defined_method",
        "type_comments": [
            "(str) -> function",
            "(str) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2039,
        "func_name": "_signature_bound_method",
        "type_comments": [
            "(inspect.Signature) -> inspect.Signature"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2065,
        "func_name": "_signature_is_builtin",
        "type_comments": [
            "(type) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2077,
        "func_name": "_signature_is_functionlike",
        "type_comments": [
            "(type) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2333,
        "func_name": "_signature_from_function",
        "type_comments": [
            "(function, bool, None, None, bool) -> inspect.Signature"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2428,
        "func_name": "_signature_from_callable",
        "type_comments": [
            "(type, bool, bool, None, None, bool, type) -> pyannotate_runtime.collect_types.UnknownType",
            "(function, bool, bool, None, None, bool, type) -> inspect.Signature"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2686,
        "func_name": "Parameter.__init__",
        "type_comments": [
            "(str, inspect._ParameterKind, type, type) -> None",
            "(str, inspect._ParameterKind, None, typing._UnionGenericAlias) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2739,
        "func_name": "name",
        "type_comments": [
            "() -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2743,
        "func_name": "default",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2751,
        "func_name": "kind",
        "type_comments": [
            "() -> inspect._ParameterKind"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2773,
        "func_name": "Parameter.__str__",
        "type_comments": [
            "() -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 2972,
        "func_name": "Signature.__init__",
        "type_comments": [
            "(List[inspect.Parameter], None, bool) -> None",
            "(Tuple[inspect.Parameter, inspect.Parameter], None, bool) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 3024,
        "func_name": "from_callable",
        "type_comments": [
            "(type, bool, None, None, bool) -> inspect.Signature"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 3032,
        "func_name": "parameters",
        "type_comments": [
            "() -> mappingproxy"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 3036,
        "func_name": "return_annotation",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 3040,
        "func_name": "Signature.replace",
        "type_comments": [
            "(Tuple[inspect.Parameter, inspect.Parameter], type) -> inspect.Signature"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 3232,
        "func_name": "Signature.__str__",
        "type_comments": [
            "() -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\inspect.py",
        "line": 3278,
        "func_name": "signature",
        "type_comments": [
            "(type, bool, None, None, bool) -> inspect.Signature"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\json\\__init__.py",
        "line": 299,
        "func_name": "loads",
        "type_comments": [
            "(str, None, None, None, None, None, None) -> Dict[str, Union[Dict[str, str], List[Dict[str, Optional[str]]], List[str], str]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\json\\decoder.py",
        "line": 332,
        "func_name": "JSONDecoder.decode",
        "type_comments": [
            "(str, builtin_method) -> Dict[str, Union[Dict[str, str], List[Dict[str, Optional[str]]], List[str], str]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\json\\decoder.py",
        "line": 343,
        "func_name": "JSONDecoder.raw_decode",
        "type_comments": [
            "(str, int) -> Tuple[Dict[str, Union[Dict[str, str], List[Dict[str, Optional[str]]], List[str], str]], int]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\linecache.py",
        "line": 26,
        "func_name": "getline",
        "type_comments": [
            "(str, int, None) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\linecache.py",
        "line": 36,
        "func_name": "getlines",
        "type_comments": [
            "(str, None) -> List[str]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\linecache.py",
        "line": 52,
        "func_name": "checkcache",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\linecache.py",
        "line": 80,
        "func_name": "updatecache",
        "type_comments": [
            "(str, None) -> List[str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\linecache.py",
        "line": 147,
        "func_name": "lazycache",
        "type_comments": [
            "(str, Dict[str, Optional[Union[_frozen_importlib_external.SourceFileLoader, str]]]) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 123,
        "func_name": "getLevelName",
        "type_comments": [
            "(int) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 194,
        "func_name": "_is_internal_frame",
        "type_comments": [
            "(frame) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 202,
        "func_name": "_checkLevel",
        "type_comments": [
            "(int) -> int"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 228,
        "func_name": "_acquireLock",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 237,
        "func_name": "_releaseLock",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 292,
        "func_name": "LogRecord.__init__",
        "type_comments": [
            "(str, int, str, int, str, Tuple[str], None, str, None) -> None",
            "(str, int, str, int, str, Tuple[str], Tuple[type, NotImplementedError, traceback], str, None) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 368,
        "func_name": "LogRecord.getMessage",
        "type_comments": [
            "() -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 432,
        "func_name": "PercentStyle.usesTime",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 440,
        "func_name": "PercentStyle._format",
        "type_comments": [
            "(logging.LogRecord) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 447,
        "func_name": "PercentStyle.format",
        "type_comments": [
            "(logging.LogRecord) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 606,
        "func_name": "Formatter.formatTime",
        "type_comments": [
            "(logging.LogRecord, None) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 633,
        "func_name": "Formatter.formatException",
        "type_comments": [
            "(Tuple[type, NotImplementedError, traceback]) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 652,
        "func_name": "Formatter.usesTime",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 658,
        "func_name": "Formatter.formatMessage",
        "type_comments": [
            "(logging.LogRecord) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 674,
        "func_name": "Formatter.format",
        "type_comments": [
            "(logging.LogRecord) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 795,
        "func_name": "Filterer.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 815,
        "func_name": "Filterer.filter",
        "type_comments": [
            "(logging.LogRecord) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 922,
        "func_name": "Handler.acquire",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 929,
        "func_name": "Handler.release",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 942,
        "func_name": "Handler.format",
        "type_comments": [
            "(logging.LogRecord) -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 965,
        "func_name": "Handler.handle",
        "type_comments": [
            "(logging.LogRecord) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1087,
        "func_name": "StreamHandler.flush",
        "type_comments": [
            "() -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1098,
        "func_name": "StreamHandler.emit",
        "type_comments": [
            "(logging.LogRecord) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1216,
        "func_name": "FileHandler.emit",
        "type_comments": [
            "(logging.LogRecord) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1319,
        "func_name": "disable",
        "type_comments": [
            "() -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1327,
        "func_name": "Manager.getLogger",
        "type_comments": [
            "(str) -> logging.Logger"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1378,
        "func_name": "Manager._fixupParents",
        "type_comments": [
            "(logging.Logger) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1447,
        "func_name": "Logger.__init__",
        "type_comments": [
            "(str, int) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1467,
        "func_name": "Logger.debug",
        "type_comments": [
            "(str) -> None",
            "(str, *str) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1479,
        "func_name": "Logger.info",
        "type_comments": [
            "(str, *str) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1508,
        "func_name": "Logger.error",
        "type_comments": [
            "(str, *str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1520,
        "func_name": "Logger.exception",
        "type_comments": [
            "(str, bool, *str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1561,
        "func_name": "Logger.findCaller",
        "type_comments": [
            "(bool, int) -> Tuple[str, int, str, None]"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1595,
        "func_name": "Logger.makeRecord",
        "type_comments": [
            "(str, int, str, int, str, Tuple[str], Tuple[type, NotImplementedError, traceback], str, None, None) -> logging.LogRecord",
            "(str, int, str, int, str, Tuple[str], None, str, None, None) -> logging.LogRecord"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1610,
        "func_name": "Logger._log",
        "type_comments": [
            "(int, str, Tuple[str], None, None, bool, int) -> None",
            "(int, str, Tuple[str], bool, None, bool, int) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1636,
        "func_name": "Logger.handle",
        "type_comments": [
            "(logging.LogRecord) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1690,
        "func_name": "Logger.callHandlers",
        "type_comments": [
            "(logging.LogRecord) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1720,
        "func_name": "Logger.getEffectiveLevel",
        "type_comments": [
            "() -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 1734,
        "func_name": "Logger.isEnabledFor",
        "type_comments": [
            "(int) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\logging\\__init__.py",
        "line": 2081,
        "func_name": "getLogger",
        "type_comments": [
            "(str) -> logging.Logger"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\multiprocessing\\process.py",
        "line": 37,
        "func_name": "current_process",
        "type_comments": [
            "() -> multiprocessing.process._MainProcess"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\multiprocessing\\process.py",
        "line": 189,
        "func_name": "name",
        "type_comments": [
            "() -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 56,
        "func_name": "_Flavour.parse_parts",
        "type_comments": [
            "(List[str]) -> Tuple[str, str, List[str]]"
        ],
        "samples": 10
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 94,
        "func_name": "_Flavour.join_parsed_parts",
        "type_comments": [
            "(str, str, List[str], str, str, List[str]) -> Tuple[str, str, List[str]]"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 147,
        "func_name": "_WindowsFlavour.splitroot",
        "type_comments": [
            "(str, str) -> Tuple[str, str, str]"
        ],
        "samples": 12
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 484,
        "func_name": "_parse_args",
        "type_comments": [
            "(Tuple[str, str]) -> Tuple[str, str, List[str]]",
            "(Tuple[str]) -> Tuple[str, str, List[str]]"
        ],
        "samples": 10
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 504,
        "func_name": "_from_parts",
        "type_comments": [
            "(Tuple[str, str]) -> pathlib.WindowsPath"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 515,
        "func_name": "_from_parsed_parts",
        "type_comments": [
            "(str, str, List[str]) -> pathlib.WindowsPath"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 523,
        "func_name": "_format_parsed_parts",
        "type_comments": [
            "(str, str, List[str]) -> str"
        ],
        "samples": 10
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 530,
        "func_name": "PurePath._make_child",
        "type_comments": [
            "(Tuple[str]) -> pathlib.WindowsPath"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 536,
        "func_name": "PurePath.__str__",
        "type_comments": [
            "() -> str"
        ],
        "samples": 10
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 546,
        "func_name": "PurePath.__fspath__",
        "type_comments": [
            "() -> str"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 757,
        "func_name": "PurePath.joinpath",
        "type_comments": [
            "(*str) -> pathlib.WindowsPath"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 868,
        "func_name": "__new__",
        "type_comments": [
            "(*str) -> pathlib.WindowsPath"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 1036,
        "func_name": "Path.open",
        "type_comments": [
            "(str, int, str, None, None) -> _io.TextIOWrapper",
            "(str, int, str, None, None) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\pathlib.py",
        "line": 1053,
        "func_name": "Path.read_text",
        "type_comments": [
            "(str, None) -> str",
            "(str, None) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\__init__.py",
        "line": 163,
        "func_name": "match",
        "type_comments": [
            "(str, str, int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\__init__.py",
        "line": 178,
        "func_name": "sub",
        "type_comments": [
            "(str, str, str, int, int) -> str"
        ],
        "samples": 10
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\__init__.py",
        "line": 225,
        "func_name": "compile",
        "type_comments": [
            "(bytes, int) -> re.Pattern",
            "(str, int) -> re.Pattern",
            "(str, re.RegexFlag) -> re.Pattern"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\__init__.py",
        "line": 272,
        "func_name": "_compile",
        "type_comments": [
            "(str, int) -> re.Pattern",
            "(str, re.RegexFlag) -> re.Pattern"
        ],
        "samples": 10
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 31,
        "func_name": "_combine_flags",
        "type_comments": [
            "(int, int, int, int) -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 37,
        "func_name": "_compile",
        "type_comments": [
            "(List[Union[int, re._constants._NamedIntConstant]], re._parser.SubPattern, int) -> pyannotate_runtime.collect_types.UnknownType",
            "(List[Union[int, re._constants._NamedIntConstant]], re._parser.SubPattern, int) -> None",
            "(List[Union[int, re._constants._NamedIntConstant]], List[Union[Tuple[re._constants._NamedIntConstant, Tuple[int, int, re._parser.SubPattern]], Tuple[re._constants._NamedIntConstant, Tuple[int, re._constants._NamedIntConstant, re._parser.SubPattern]], Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]]], int) -> pyannotate_runtime.collect_types.UnknownType"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 214,
        "func_name": "_compile_charset",
        "type_comments": [
            "(List[Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]], int, List[Union[int, re._constants._NamedIntConstant]]) -> None",
            "(List[Union[Tuple[re._constants._NamedIntConstant, Tuple[int, int]], Tuple[re._constants._NamedIntConstant, int]]], int, List[Union[int, re._constants._NamedIntConstant]]) -> None",
            "(List[Tuple[re._constants._NamedIntConstant, Tuple[int, int]]], int, List[Union[int, re._constants._NamedIntConstant]]) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 241,
        "func_name": "_optimize_charset",
        "type_comments": [
            "(List[Tuple[re._constants._NamedIntConstant, Tuple[int, int]]], builtin_function_or_method, builtin_function_or_method, Dict[int, Tuple[int]]) -> Tuple[List[Tuple[re._constants._NamedIntConstant, Tuple[int, int]]], bool]",
            "(List[Tuple[re._constants._NamedIntConstant, int]], builtin_function_or_method, builtin_function_or_method, Dict[int, Tuple[int]]) -> Tuple[List[Union[Tuple[re._constants._NamedIntConstant, Tuple[int, int]], Tuple[re._constants._NamedIntConstant, int]]], bool]",
            "(List[Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]], builtin_function_or_method, builtin_function_or_method, Dict[int, Tuple[int]]) -> Tuple[List[Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]], bool]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 384,
        "func_name": "_mk_bitmap",
        "type_comments": [
            "(bytearray, int, type) -> List[int]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 389,
        "func_name": "_bytes_to_codes",
        "type_comments": [
            "(bytearray) -> List[int]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 396,
        "func_name": "_simple",
        "type_comments": [
            "(re._parser.SubPattern) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 405,
        "func_name": "_generate_overlap_table",
        "type_comments": [
            "(List[int]) -> List[int]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 426,
        "func_name": "_get_iscased",
        "type_comments": [
            "(int) -> builtin_function_or_method",
            "(int) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 434,
        "func_name": "_get_literal_prefix",
        "type_comments": [
            "(re._parser.SubPattern, int) -> pyannotate_runtime.collect_types.UnknownType",
            "(re._parser.SubPattern, int) -> Tuple[List, None, bool]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 465,
        "func_name": "_get_charset_prefix",
        "type_comments": [
            "(re._parser.SubPattern, int) -> None",
            "(re._parser.SubPattern, int) -> List[Tuple[re._constants._NamedIntConstant, int]]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 509,
        "func_name": "_compile_info",
        "type_comments": [
            "(List, re._parser.SubPattern, int) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 568,
        "func_name": "isstring",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 571,
        "func_name": "_code",
        "type_comments": [
            "(re._parser.SubPattern, int) -> List[Union[int, re._constants._NamedIntConstant]]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_compiler.py",
        "line": 738,
        "func_name": "compile",
        "type_comments": [
            "(bytes, int) -> re.Pattern",
            "(str, int) -> re.Pattern"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 73,
        "func_name": "State.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 79,
        "func_name": "groups",
        "type_comments": [
            "() -> int"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 82,
        "func_name": "State.opengroup",
        "type_comments": [
            "(str) -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 94,
        "func_name": "State.closegroup",
        "type_comments": [
            "(int, re._parser.SubPattern) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 109,
        "func_name": "SubPattern.__init__",
        "type_comments": [
            "(re._parser.State, List[Tuple[re._constants._NamedIntConstant, None]]) -> None",
            "(re._parser.State, None) -> None",
            "(re._parser.State, List[Tuple[re._constants._NamedIntConstant, int]]) -> None",
            "(re._parser.State, List[Tuple[re._constants._NamedIntConstant, List[Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]]]]) -> None"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 160,
        "func_name": "SubPattern.__len__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 9
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 164,
        "func_name": "SubPattern.__getitem__",
        "type_comments": [
            "(int) -> Tuple[re._constants._NamedIntConstant, int]",
            "(int) -> Tuple[re._constants._NamedIntConstant, Tuple[int, int, int, re._parser.SubPattern]]",
            "(slice) -> re._parser.SubPattern",
            "(int) -> Tuple[re._constants._NamedIntConstant, List[Tuple[re._constants._NamedIntConstant, int]]]",
            "(int) -> Tuple[re._constants._NamedIntConstant, List[Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]]]",
            "(int) -> Tuple[re._constants._NamedIntConstant, List[Union[Tuple[re._constants._NamedIntConstant, int], Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]]]]",
            "(int) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 17
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 168,
        "func_name": "SubPattern.__setitem__",
        "type_comments": [
            "(int, Tuple[re._constants._NamedIntConstant, Tuple[int, re._constants._NamedIntConstant, re._parser.SubPattern]]) -> None",
            "(int, Tuple[re._constants._NamedIntConstant, Tuple[int, int, re._parser.SubPattern]]) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 172,
        "func_name": "SubPattern.append",
        "type_comments": [
            "(Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]) -> None",
            "(Tuple[re._constants._NamedIntConstant, int]) -> None",
            "(Tuple[re._constants._NamedIntConstant, List[Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]]]) -> None",
            "(Tuple[re._constants._NamedIntConstant, List[Tuple[re._constants._NamedIntConstant, Tuple[int, int]]]]) -> None",
            "(Tuple[re._constants._NamedIntConstant, Tuple[int, int, int, re._parser.SubPattern]]) -> None"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 174,
        "func_name": "SubPattern.getwidth",
        "type_comments": [
            "() -> Tuple[int, int]",
            "() -> pyannotate_runtime.collect_types.UnknownType"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 224,
        "func_name": "Tokenizer.__init__",
        "type_comments": [
            "(str) -> None",
            "(bytes) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 233,
        "func_name": "__next",
        "type_comments": [
            "() -> None"
        ],
        "samples": 26
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 249,
        "func_name": "Tokenizer.match",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 11
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 254,
        "func_name": "Tokenizer.get",
        "type_comments": [
            "() -> str"
        ],
        "samples": 22
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 267,
        "func_name": "Tokenizer.getuntil",
        "type_comments": [
            "(str, str) -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 286,
        "func_name": "Tokenizer.tell",
        "type_comments": [
            "() -> int"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 297,
        "func_name": "Tokenizer.checkgroupname",
        "type_comments": [
            "(str, int, int) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 309,
        "func_name": "_class_escape",
        "type_comments": [
            "(re._parser.Tokenizer, str) -> Tuple[re._constants._NamedIntConstant, int]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 369,
        "func_name": "_escape",
        "type_comments": [
            "(re._parser.Tokenizer, str, re._parser.State) -> Tuple[re._constants._NamedIntConstant, int]",
            "(re._parser.Tokenizer, str, re._parser.State) -> Tuple[re._constants._NamedIntConstant, List[Tuple[re._constants._NamedIntConstant, re._constants._NamedIntConstant]]]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 446,
        "func_name": "_uniq",
        "type_comments": [
            "(List[Tuple[re._constants._NamedIntConstant, int]]) -> List[Tuple[re._constants._NamedIntConstant, int]]",
            "(List[Tuple[re._constants._NamedIntConstant, Tuple[int, int]]]) -> List[Tuple[re._constants._NamedIntConstant, Tuple[int, int]]]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 449,
        "func_name": "_parse_sub",
        "type_comments": [
            "(re._parser.Tokenizer, re._parser.State, bool, int) -> pyannotate_runtime.collect_types.UnknownType",
            "(re._parser.Tokenizer, re._parser.State, bool, int) -> re._parser.SubPattern",
            "(re._parser.Tokenizer, re._parser.State, int, int) -> pyannotate_runtime.collect_types.UnknownType"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 509,
        "func_name": "_parse",
        "type_comments": [
            "(re._parser.Tokenizer, re._parser.State, bool, int, bool) -> pyannotate_runtime.collect_types.UnknownType",
            "(re._parser.Tokenizer, re._parser.State, int, int, bool) -> re._parser.SubPattern",
            "(re._parser.Tokenizer, re._parser.State, bool, int, bool) -> re._parser.SubPattern",
            "(re._parser.Tokenizer, re._parser.State, int, int, bool) -> pyannotate_runtime.collect_types.UnknownType"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 956,
        "func_name": "fix_flags",
        "type_comments": [
            "(bytes, int) -> int",
            "(str, int) -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\re\\_parser.py",
        "line": 972,
        "func_name": "parse",
        "type_comments": [
            "(str, int, None) -> re._parser.SubPattern",
            "(bytes, int, None) -> re._parser.SubPattern"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\reprlib.py",
        "line": 15,
        "func_name": "wrapper",
        "type_comments": [
            "() -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\reprlib.py",
        "line": 52,
        "func_name": "Repr.repr",
        "type_comments": [
            "(None) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\reprlib.py",
        "line": 55,
        "func_name": "Repr.repr1",
        "type_comments": [
            "(None, int) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\reprlib.py",
        "line": 143,
        "func_name": "Repr.repr_instance",
        "type_comments": [
            "(None, int) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\signal.py",
        "line": 24,
        "func_name": "_int_to_enum",
        "type_comments": [
            "(builtin_function_or_method, enum.EnumType) -> builtin_function_or_method",
            "(functools.partial, enum.EnumType) -> functools.partial"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\signal.py",
        "line": 34,
        "func_name": "_enum_to_int",
        "type_comments": [
            "(builtin_function_or_method) -> builtin_function_or_method",
            "(functools.partial) -> functools.partial",
            "(signal.Signals) -> int"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\signal.py",
        "line": 54,
        "func_name": "signal",
        "type_comments": [
            "(signal.Signals, functools.partial) -> builtin_function_or_method",
            "(signal.Signals, builtin_function_or_method) -> functools.partial"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\signal.py",
        "line": 60,
        "func_name": "getsignal",
        "type_comments": [
            "(signal.Signals) -> builtin_function_or_method",
            "(signal.Signals) -> functools.partial"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 99,
        "func_name": "_intenum_converter",
        "type_comments": [
            "(int, enum.EnumType) -> socket.AddressFamily",
            "(int, enum.EnumType) -> socket.SocketKind"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 220,
        "func_name": "socket.__init__",
        "type_comments": [
            "(socket.AddressFamily, socket.SocketKind, int, None) -> None",
            "(socket.AddressFamily, socket.SocketKind, int, int) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 287,
        "func_name": "socket.accept",
        "type_comments": [
            "() -> Tuple[socket.socket, Tuple[str, int]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 303,
        "func_name": "socket.makefile",
        "type_comments": [
            "(str, None, None, None, None) -> _io.BufferedReader"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 489,
        "func_name": "socket._decref_socketios",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 495,
        "func_name": "socket._real_close",
        "type_comments": [
            "(type) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 499,
        "func_name": "socket.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 505,
        "func_name": "socket.detach",
        "type_comments": [
            "() -> int"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 515,
        "func_name": "family",
        "type_comments": [
            "() -> socket.AddressFamily"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 521,
        "func_name": "type",
        "type_comments": [
            "() -> socket.SocketKind"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 616,
        "func_name": "socketpair",
        "type_comments": [
            "(socket.AddressFamily, socket.SocketKind, int) -> Tuple[socket.socket, socket.socket]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 680,
        "func_name": "SocketIO.__init__",
        "type_comments": [
            "(ssl.SSLSocket, str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 692,
        "func_name": "SocketIO.readinto",
        "type_comments": [
            "(memoryview) -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 731,
        "func_name": "SocketIO.readable",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 769,
        "func_name": "SocketIO.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 809,
        "func_name": "create_connection",
        "type_comments": [
            "(Tuple[str, int], object, None, bool) -> socket.socket"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\socket.py",
        "line": 945,
        "func_name": "getaddrinfo",
        "type_comments": [
            "(str, int, int, socket.SocketKind, int, int) -> List[Tuple[socket.AddressFamily, socket.SocketKind, int, str, Tuple[str, int]]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 492,
        "func_name": "__new__",
        "type_comments": [
            "(ssl._SSLMethod) -> ssl.SSLContext"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 503,
        "func_name": "SSLContext._encode_hostname",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 511,
        "func_name": "SSLContext.wrap_socket",
        "type_comments": [
            "(socket.socket, bool, bool, bool, str, None) -> ssl.SSLSocket"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 566,
        "func_name": "SSLContext.set_alpn_protocols",
        "type_comments": [
            "(List[str]) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 577,
        "func_name": "SSLContext._load_windows_store_certs",
        "type_comments": [
            "(str, ssl.Purpose) -> bytearray"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 591,
        "func_name": "SSLContext.load_default_certs",
        "type_comments": [
            "(ssl.Purpose) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 732,
        "func_name": "verify_mode",
        "type_comments": [
            "() -> ssl.VerifyMode"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 740,
        "func_name": "verify_mode",
        "type_comments": [
            "(ssl.VerifyMode) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 745,
        "func_name": "create_default_context",
        "type_comments": [
            "(ssl.Purpose, None, None, None) -> ssl.SSLContext"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 1018,
        "func_name": "_create",
        "type_comments": [
            "(socket.socket, bool, bool, bool, str, ssl.SSLContext, None) -> ssl.SSLSocket"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 1146,
        "func_name": "SSLSocket._checkClosed",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 1150,
        "func_name": "SSLSocket._check_connected",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 1158,
        "func_name": "SSLSocket.read",
        "type_comments": [
            "(int, memoryview) -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 1236,
        "func_name": "SSLSocket.send",
        "type_comments": [
            "(memoryview, int) -> int"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 1263,
        "func_name": "SSLSocket.sendall",
        "type_comments": [
            "(bytes, int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 1300,
        "func_name": "SSLSocket.recv_into",
        "type_comments": [
            "(memoryview, None, int) -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 1368,
        "func_name": "SSLSocket._real_close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\ssl.py",
        "line": 1372,
        "func_name": "SSLSocket.do_handshake",
        "type_comments": [
            "(bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\textwrap.py",
        "line": 419,
        "func_name": "dedent",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\textwrap.py",
        "line": 470,
        "func_name": "indent",
        "type_comments": [
            "(str, str, function) -> str"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\textwrap.py",
        "line": 482,
        "func_name": "prefixed_lines",
        "type_comments": [
            "() -> Iterator",
            "() -> Iterator[str]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 90,
        "func_name": "RLock",
        "type_comments": [
            "() -> _thread.RLock"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 243,
        "func_name": "Condition.__init__",
        "type_comments": [
            "(_thread.lock) -> None",
            "(None) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 271,
        "func_name": "Condition.__enter__",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 274,
        "func_name": "Condition.__exit__",
        "type_comments": [
            "(*None) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 280,
        "func_name": "Condition._release_save",
        "type_comments": [
            "() -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 283,
        "func_name": "Condition._acquire_restore",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 286,
        "func_name": "Condition._is_owned",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 295,
        "func_name": "Condition.wait",
        "type_comments": [
            "(None) -> bool",
            "(int) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 366,
        "func_name": "Condition.notify",
        "type_comments": [
            "(int) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 396,
        "func_name": "Condition.notify_all",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 429,
        "func_name": "Semaphore.__init__",
        "type_comments": [
            "(int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 440,
        "func_name": "Semaphore.acquire",
        "type_comments": [
            "(bool, int) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 487,
        "func_name": "Semaphore.release",
        "type_comments": [
            "(int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 562,
        "func_name": "Event.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 575,
        "func_name": "Event.is_set",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 611,
        "func_name": "Event.wait",
        "type_comments": [
            "(None) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 811,
        "func_name": "_newname",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 829,
        "func_name": "_maintain_shutdown_locks",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 856,
        "func_name": "Thread.__init__",
        "type_comments": [
            "(None, function, str, Tuple[weakref.ReferenceType, _queue.SimpleQueue, None, Tuple[]], None, None) -> None",
            "(None, method, None, Tuple[_asyncio.Future], None, None) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 945,
        "func_name": "Thread.start",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 971,
        "func_name": "Thread.run",
        "type_comments": [
            "() -> None",
            "() -> pyannotate_runtime.collect_types.UnknownType"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1051,
        "func_name": "Thread._stop",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1078,
        "func_name": "Thread._delete",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1087,
        "func_name": "Thread.join",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1125,
        "func_name": "Thread._wait_for_tstate_lock",
        "type_comments": [
            "(bool, int) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1152,
        "func_name": "name",
        "type_comments": [
            "() -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1206,
        "func_name": "daemon",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1324,
        "func_name": "_make_invoke_excepthook",
        "type_comments": [
            "() -> function"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1453,
        "func_name": "current_thread",
        "type_comments": [
            "() -> threading._MainThread"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1516,
        "func_name": "_register_atexit",
        "type_comments": [
            "(function) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\threading.py",
        "line": 1597,
        "func_name": "main_thread",
        "type_comments": [
            "() -> threading._MainThread"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\tokenize.py",
        "line": 299,
        "func_name": "detect_encoding",
        "type_comments": [
            "(builtin_function_or_method) -> Tuple[str, List[bytes]]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\tokenize.py",
        "line": 323,
        "func_name": "read_or_stop",
        "type_comments": [
            "() -> bytes"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\tokenize.py",
        "line": 329,
        "func_name": "find_cookie",
        "type_comments": [
            "(bytes) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\tokenize.py",
        "line": 392,
        "func_name": "open",
        "type_comments": [
            "(str) -> _io.TextIOWrapper"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 96,
        "func_name": "_parse_value_tb",
        "type_comments": [
            "(type, NotImplementedError, traceback) -> Tuple[NotImplementedError, traceback]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 111,
        "func_name": "print_exception",
        "type_comments": [
            "(type, NotImplementedError, traceback, None, _io.StringIO, bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 165,
        "func_name": "_format_final_exc_line",
        "type_comments": [
            "(str, str) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 173,
        "func_name": "_safe_string",
        "type_comments": [
            "(NotImplementedError, str, type) -> str",
            "(str, str, type) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 264,
        "func_name": "FrameSummary.__init__",
        "type_comments": [
            "(str, int, str, bool, None, None, int, int, int) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 310,
        "func_name": "_original_line",
        "type_comments": [
            "() -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 316,
        "func_name": "line",
        "type_comments": [
            "() -> str"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 349,
        "func_name": "_walk_tb_with_full_positions",
        "type_comments": [
            "(traceback) -> Iterator",
            "(traceback) -> Iterator[Tuple[frame, Tuple[int, int, int, int]]]"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 363,
        "func_name": "_get_code_position",
        "type_comments": [
            "(code, int) -> Tuple[int, int, int, int]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 397,
        "func_name": "_extract_from_extended_frame_gen",
        "type_comments": [
            "(type, generator, None, bool, bool) -> traceback.StackSummary"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 458,
        "func_name": "StackSummary.format_frame_summary",
        "type_comments": [
            "(traceback.FrameSummary) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 513,
        "func_name": "StackSummary.format",
        "type_comments": [
            "() -> List[str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 561,
        "func_name": "_byte_offset_to_character_offset",
        "type_comments": [
            "(str, int) -> int"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 577,
        "func_name": "_extract_caret_anchors_from_line_segment",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 626,
        "func_name": "_ExceptionPrintContext.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 631,
        "func_name": "_ExceptionPrintContext.indent",
        "type_comments": [
            "() -> str"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 634,
        "func_name": "_ExceptionPrintContext.emit",
        "type_comments": [
            "(List[str], str) -> Iterator",
            "(str, str) -> Iterator",
            "(List[str], str) -> Iterator[str]",
            "(str, None) -> Iterator[str]",
            "(List[str], None) -> Iterator[str]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 687,
        "func_name": "TracebackException.__init__",
        "type_comments": [
            "(type, NotImplementedError, traceback, None, bool, bool, bool, int, int, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 802,
        "func_name": "TracebackException._load_lines",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 815,
        "func_name": "TracebackException.format_exception_only",
        "type_comments": [
            "() -> Iterator",
            "() -> Iterator[str]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 886,
        "func_name": "TracebackException.format",
        "type_comments": [
            "(bool, traceback._ExceptionPrintContext) -> Iterator[str]",
            "(bool, None) -> Iterator[str]",
            "(bool, traceback._ExceptionPrintContext) -> Iterator"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\traceback.py",
        "line": 987,
        "func_name": "TracebackException.print",
        "type_comments": [
            "(_io.StringIO, bool) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 159,
        "func_name": "_type_convert",
        "type_comments": [
            "(typing._UnionGenericAlias, None, bool) -> typing._UnionGenericAlias",
            "(type, None, bool) -> type",
            "(str, None, bool) -> typing.ForwardRef"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 168,
        "func_name": "_type_check",
        "type_comments": [
            "(typing._UnionGenericAlias, str, bool, None, bool) -> typing._UnionGenericAlias",
            "(type, str, bool, None, bool) -> type"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 226,
        "func_name": "_type_repr",
        "type_comments": [
            "(type) -> str",
            "(abc.ABCMeta) -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 299,
        "func_name": "_deduplicate",
        "type_comments": [
            "(List[typing._GenericAlias]) -> List[typing._GenericAlias]",
            "(List[Union[type, typing._GenericAlias]]) -> List[Union[type, typing._GenericAlias]]",
            "(List[Union[typing.TypeVar, typing._GenericAlias]]) -> List[Union[typing.TypeVar, typing._GenericAlias]]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 313,
        "func_name": "_remove_dups_flatten",
        "type_comments": [
            "(Tuple[typing._GenericAlias, typing._GenericAlias]) -> Tuple[typing._GenericAlias, typing._GenericAlias]",
            "(Tuple[typing._GenericAlias, typing.TypeVar]) -> Tuple[typing._GenericAlias, typing.TypeVar]",
            "(Tuple[type, type, typing._GenericAlias]) -> Tuple[type, type, typing._GenericAlias]",
            "(Tuple[type, typing._GenericAlias]) -> Tuple[type, typing._GenericAlias]"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 352,
        "func_name": "inner",
        "type_comments": [
            "(*Union[Tuple[type, type], typing._TupleType]) -> typing._GenericAlias",
            "(*Union[Tuple[typing._UnionGenericAlias, ellipsis], typing._TupleType]) -> typing._GenericAlias",
            "(*Union[Tuple[type, type], typing._SpecialForm]) -> typing._UnionGenericAlias",
            "(*Union[Tuple[type, type, typing._GenericAlias], typing._SpecialForm]) -> typing._UnionGenericAlias"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 458,
        "func_name": "_SpecialForm.__repr__",
        "type_comments": [
            "() -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 479,
        "func_name": "__getitem__",
        "type_comments": [
            "(Tuple[type, type, typing._GenericAlias]) -> typing._UnionGenericAlias",
            "(Tuple[typing._GenericAlias, typing.TypeVar]) -> typing._UnionGenericAlias",
            "(Tuple[type, typing._GenericAlias]) -> typing._UnionGenericAlias",
            "(Tuple[typing._GenericAlias, typing._GenericAlias]) -> typing._UnionGenericAlias"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 658,
        "func_name": "Union",
        "type_comments": [
            "(Tuple[type, type, typing._GenericAlias]) -> typing._UnionGenericAlias",
            "(Tuple[typing._GenericAlias, typing.TypeVar]) -> typing._UnionGenericAlias",
            "(Tuple[type, typing._GenericAlias]) -> typing._UnionGenericAlias",
            "(Tuple[typing._GenericAlias, typing._GenericAlias]) -> typing._UnionGenericAlias"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 702,
        "func_name": "Optional",
        "type_comments": [
            "(str) -> typing._UnionGenericAlias",
            "(abc.ABCMeta) -> typing._UnionGenericAlias"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 845,
        "func_name": "ForwardRef.__init__",
        "type_comments": [
            "(str, bool, None, bool) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 895,
        "func_name": "ForwardRef.__eq__",
        "type_comments": [
            "(typing._SpecialForm) -> NotImplementedType",
            "(typing._AnyMeta) -> NotImplementedType"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 904,
        "func_name": "ForwardRef.__hash__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 926,
        "func_name": "_is_typevar_like",
        "type_comments": [
            "(typing.TypeVar) -> bool"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 945,
        "func_name": "_BoundVarianceMixin.__init__",
        "type_comments": [
            "(None, bool, bool) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1019,
        "func_name": "TypeVar.__init__",
        "type_comments": [
            "(str, None, bool, bool) -> None"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1245,
        "func_name": "_is_dunder",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 8
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1258,
        "func_name": "_BaseGenericAlias.__init__",
        "type_comments": [
            "(type, bool, str) -> None",
            "(typing._SpecialForm, bool, None) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1287,
        "func_name": "_BaseGenericAlias.__getattr__",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1297,
        "func_name": "_BaseGenericAlias.__setattr__",
        "type_comments": [
            "(str, bool) -> None",
            "(str, type) -> None",
            "(str, str) -> None",
            "(str, Tuple[type, typing._UnionGenericAlias]) -> None",
            "(str, None) -> None",
            "(str, Tuple[typing._UnionGenericAlias, ellipsis]) -> None"
        ],
        "samples": 7
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1353,
        "func_name": "_GenericAlias.__init__",
        "type_comments": [
            "(type, Tuple[type, typing._UnionGenericAlias], bool, str, bool) -> None",
            "(type, Tuple[typing._UnionGenericAlias, type], bool, str, bool) -> None",
            "(typing._SpecialForm, Tuple[type, type, typing._GenericAlias], bool, None, bool) -> None",
            "(type, Tuple[type, type], bool, str, bool) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1365,
        "func_name": "_GenericAlias.__eq__",
        "type_comments": [
            "(typing._ProtocolMeta) -> NotImplementedType",
            "(typing._SpecialForm) -> NotImplementedType",
            "(typing._AnyMeta) -> NotImplementedType"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1371,
        "func_name": "_GenericAlias.__hash__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1529,
        "func_name": "_GenericAlias.__mro_entries__",
        "type_comments": [
            "(Tuple[typing._GenericAlias]) -> Tuple[type]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1563,
        "func_name": "__getitem__",
        "type_comments": [
            "(Tuple[type, typing._GenericAlias]) -> typing._GenericAlias",
            "(Tuple[type, typing._UnionGenericAlias]) -> typing._GenericAlias",
            "(typing._AnyMeta) -> typing._GenericAlias"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1572,
        "func_name": "_SpecialGenericAlias.copy_with",
        "type_comments": [
            "(Tuple[type, typing._UnionGenericAlias]) -> typing._GenericAlias",
            "(Tuple[type, type]) -> typing._GenericAlias",
            "(Tuple[typing._UnionGenericAlias, type]) -> typing._GenericAlias"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1613,
        "func_name": "_CallableType.copy_with",
        "type_comments": [
            "(Tuple[type, type, type]) -> typing._CallableGenericAlias",
            "(Tuple[typing._GenericAlias, typing._GenericAlias, type]) -> typing._CallableGenericAlias"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1618,
        "func_name": "_CallableType.__getitem__",
        "type_comments": [
            "(Tuple[List[type], type]) -> typing._CallableGenericAlias",
            "(Tuple[List[typing._GenericAlias], type]) -> typing._CallableGenericAlias"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1632,
        "func_name": "__getitem_inner__",
        "type_comments": [
            "(Tuple[Tuple[type, type], type]) -> typing._CallableGenericAlias",
            "(Tuple[Tuple[typing._GenericAlias, typing._GenericAlias], type]) -> typing._CallableGenericAlias"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1647,
        "func_name": "__getitem__",
        "type_comments": [
            "(Tuple[type, typing._UnionGenericAlias]) -> typing._GenericAlias",
            "(Tuple[type, type]) -> typing._GenericAlias",
            "(Tuple[typing._UnionGenericAlias, ellipsis]) -> typing._GenericAlias"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1664,
        "func_name": "_UnionGenericAlias.__eq__",
        "type_comments": [
            "(typing._SpecialForm) -> NotImplementedType",
            "(typing._AnyMeta) -> NotImplementedType"
        ],
        "samples": 6
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1669,
        "func_name": "_UnionGenericAlias.__hash__",
        "type_comments": [
            "() -> int"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1672,
        "func_name": "_UnionGenericAlias.__repr__",
        "type_comments": [
            "() -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1804,
        "func_name": "__class_getitem__",
        "type_comments": [
            "(Tuple[typing.TypeVar, typing.TypeVar]) -> typing._GenericAlias"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1851,
        "func_name": "__init_subclass__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 1955,
        "func_name": "_caller",
        "type_comments": [
            "(int, str) -> str"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 2045,
        "func_name": "__init_subclass__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 2256,
        "func_name": "cast",
        "type_comments": [
            "(abc.ABCMeta, List[numpy.ndarray]) -> List[numpy.ndarray]",
            "(type, numpy.ndarray) -> numpy.ndarray",
            "(numpy._DTypeMeta, numpy.dtypes.ObjectDType) -> numpy.dtypes.ObjectDType",
            "(numpy._DTypeMeta, None) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 2412,
        "func_name": "get_origin",
        "type_comments": [
            "(typing._GenericAlias) -> type",
            "(typing._UnionGenericAlias) -> typing._SpecialForm"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 2855,
        "func_name": "_make_nmtuple",
        "type_comments": [
            "(str, dict_items, str, List) -> type"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 2874,
        "func_name": "__new__",
        "type_comments": [
            "(str, Tuple[typing.NamedTupleMeta], Dict[str, Union[Dict[str, str], Tuple[function], str]]) -> type"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\typing.py",
        "line": 2938,
        "func_name": "_namedtuple_mro_entries",
        "type_comments": [
            "(Tuple[function]) -> Tuple[typing.NamedTupleMeta]"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 108,
        "func_name": "_noop",
        "type_comments": [
            "(urllib.parse.ParseResult) -> urllib.parse.ParseResult",
            "(urllib.parse.SplitResult) -> urllib.parse.SplitResult"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 119,
        "func_name": "_coerce_args",
        "type_comments": [
            "(*str) -> Tuple[str, str, function]"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 374,
        "func_name": "urlparse",
        "type_comments": [
            "(str, str, bool) -> urllib.parse.ParseResult"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 413,
        "func_name": "_splitnetloc",
        "type_comments": [
            "(str, int) -> Tuple[str, str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 421,
        "func_name": "_checknetloc",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 452,
        "func_name": "urlsplit",
        "type_comments": [
            "(str, str, bool) -> urllib.parse.SplitResult"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 659,
        "func_name": "unquote",
        "type_comments": [
            "(str, str, str) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 811,
        "func_name": "__getattr__",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 1037,
        "func_name": "unwrap",
        "type_comments": [
            "(str) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 1058,
        "func_name": "_splittype",
        "type_comments": [
            "(str) -> Tuple[str, str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 1079,
        "func_name": "_splithost",
        "type_comments": [
            "(str) -> Tuple[str, str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\parse.py",
        "line": 1189,
        "func_name": "_splittag",
        "type_comments": [
            "(str) -> Tuple[str, None]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 139,
        "func_name": "urlopen",
        "type_comments": [
            "(str, None, object, None, None, bool, None) -> http.client.HTTPResponse"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 301,
        "func_name": "request_host",
        "type_comments": [
            "(urllib.request.Request) -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 319,
        "func_name": "Request.__init__",
        "type_comments": [
            "(str, None, Dict, None, bool, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 337,
        "func_name": "full_url",
        "type_comments": [
            "() -> str"
        ],
        "samples": 4
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 343,
        "func_name": "full_url",
        "type_comments": [
            "(str) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 356,
        "func_name": "data",
        "type_comments": [
            "() -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 360,
        "func_name": "data",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 374,
        "func_name": "Request._parse",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 382,
        "func_name": "Request.get_method",
        "type_comments": [
            "() -> str"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 387,
        "func_name": "Request.get_full_url",
        "type_comments": [
            "() -> str"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 398,
        "func_name": "Request.has_proxy",
        "type_comments": [
            "() -> bool"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 405,
        "func_name": "Request.add_unredirected_header",
        "type_comments": [
            "(str, str) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 409,
        "func_name": "Request.has_header",
        "type_comments": [
            "(str) -> bool"
        ],
        "samples": 3
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 427,
        "func_name": "OpenerDirector.__init__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 438,
        "func_name": "OpenerDirector.add_handler",
        "type_comments": [
            "(urllib.request.ProxyHandler) -> None",
            "(urllib.request.HTTPHandler) -> None",
            "(urllib.request.UnknownHandler) -> None",
            "(urllib.request.HTTPDefaultErrorHandler) -> None",
            "(urllib.request.HTTPRedirectHandler) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 489,
        "func_name": "OpenerDirector._call_chain",
        "type_comments": [
            "(Dict[str, Union[List[urllib.request.FTPHandler], List[urllib.request.FileHandler], List[urllib.request.HTTPHandler], List[urllib.request.ProxyHandler], List[urllib.request.UnknownHandler]]], str, str, *urllib.request.Request) -> http.client.HTTPResponse",
            "(Dict[str, Union[List[urllib.request.FTPHandler], List[urllib.request.FileHandler], List[urllib.request.HTTPHandler], List[urllib.request.ProxyHandler], List[urllib.request.UnknownHandler]]], str, str, *urllib.request.Request) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 500,
        "func_name": "OpenerDirector.open",
        "type_comments": [
            "(str, None, object) -> http.client.HTTPResponse"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 529,
        "func_name": "OpenerDirector._open",
        "type_comments": [
            "(urllib.request.Request, None) -> http.client.HTTPResponse"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 569,
        "func_name": "build_opener",
        "type_comments": [
            "() -> urllib.request.OpenerDirector"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 608,
        "func_name": "BaseHandler.add_parent",
        "type_comments": [
            "(urllib.request.OpenerDirector) -> None"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 615,
        "func_name": "BaseHandler.__lt__",
        "type_comments": [
            "(urllib.request.UnknownHandler) -> bool",
            "(urllib.request.HTTPHandler) -> bool",
            "(urllib.request.ProxyHandler) -> bool"
        ],
        "samples": 5
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 628,
        "func_name": "HTTPErrorProcessor.http_response",
        "type_comments": [
            "(urllib.request.Request, http.client.HTTPResponse) -> http.client.HTTPResponse"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 795,
        "func_name": "ProxyHandler.__init__",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 1258,
        "func_name": "AbstractHTTPHandler.__init__",
        "type_comments": [
            "(int) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 1269,
        "func_name": "AbstractHTTPHandler.do_request_",
        "type_comments": [
            "(urllib.request.Request) -> urllib.request.Request"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 1307,
        "func_name": "AbstractHTTPHandler.do_open",
        "type_comments": [
            "(type, urllib.request.Request) -> http.client.HTTPResponse"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 1385,
        "func_name": "HTTPSHandler.__init__",
        "type_comments": [
            "(int, None, None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 1390,
        "func_name": "HTTPSHandler.https_open",
        "type_comments": [
            "(urllib.request.Request) -> http.client.HTTPResponse"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 2499,
        "func_name": "getproxies_environment",
        "type_comments": [
            "() -> Dict[str, str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\urllib\\request.py",
        "line": 2716,
        "func_name": "getproxies",
        "type_comments": [
            "() -> Dict[str, str]"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\warnings.py",
        "line": 165,
        "func_name": "simplefilter",
        "type_comments": [
            "(str, type, int, bool) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\warnings.py",
        "line": 181,
        "func_name": "_add_filter",
        "type_comments": [
            "(bool, *Optional[Union[str, type]]) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\warnings.py",
        "line": 440,
        "func_name": "catch_warnings.__init__",
        "type_comments": [
            "(bool, None, None, type, int, bool) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\warnings.py",
        "line": 466,
        "func_name": "catch_warnings.__enter__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\warnings.py",
        "line": 487,
        "func_name": "catch_warnings.__exit__",
        "type_comments": [
            "(*None) -> None"
        ],
        "samples": 2
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\weakref.py",
        "line": 367,
        "func_name": "WeakKeyDictionary.__init__",
        "type_comments": [
            "(None) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\weakref.py",
        "line": 369,
        "func_name": "remove",
        "type_comments": [
            "(weakref.ReferenceType, weakref.ReferenceType) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\weakref.py",
        "line": 427,
        "func_name": "WeakKeyDictionary.__setitem__",
        "type_comments": [
            "(threading.Thread, _queue.SimpleQueue) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\zipfile.py",
        "line": 693,
        "func_name": "_check_compression",
        "type_comments": [
            "(int) -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\zipfile.py",
        "line": 1245,
        "func_name": "ZipFile.__init__",
        "type_comments": [
            "(str, str, int, bool, None, bool, None) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\zipfile.py",
        "line": 1872,
        "func_name": "ZipFile.__del__",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\zipfile.py",
        "line": 1876,
        "func_name": "ZipFile.close",
        "type_comments": [
            "() -> None"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\zipfile.py",
        "line": 2266,
        "func_name": "make",
        "type_comments": [
            "(str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "C:\\Users\\EBELIN_B\\bin\\WPy64-31160\\python-3.11.6.amd64\\Lib\\zipfile.py",
        "line": 2390,
        "func_name": "Path.__init__",
        "type_comments": [
            "(str, str) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "dance_result_federation_parser.py",
        "line": 57,
        "func_name": "reslinks_interpreter",
        "type_comments": [
            "(lxml.etree._ElementTree) -> pyannotate_runtime.collect_types.NoReturnType"
        ],
        "samples": 1
    },
    {
        "path": "dance_result_federation_parser.py",
        "line": 75,
        "func_name": "async_eventurl_to_web",
        "type_comments": [
            "(str) -> None",
            "(str) -> Iterator[_asyncio.Future]"
        ],
        "samples": 2
    },
    {
        "path": "dtvprocessing.py",
        "line": 135,
        "func_name": "get_dtv_df",
        "type_comments": [
            "(bool) -> pandas.core.frame.DataFrame"
        ],
        "samples": 1
    },
    {
        "path": "topturnierprocessing.py",
        "line": 27,
        "func_name": "checkttontree",
        "type_comments": [
            "(lxml.etree._ElementTree) -> bool"
        ],
        "samples": 1
    },
    {
        "path": "tpsprocessing.py",
        "line": 23,
        "func_name": "checktpsontree",
        "type_comments": [
            "(lxml.etree._ElementTree) -> bool"
        ],
        "samples": 1
    }
]